
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'fileCOMMENT DEDENT IDENTIFIER INDENT L_BOOLEAN_FALSE L_BOOLEAN_TRUE L_CHARACTER L_INTEGER_NUMBER L_NIL L_REAL_NUMBER L_STRING RW_ABS RW_AKHIR RW_ALGORITMA RW_AND RW_ARRAY RW_AWAL RW_BOOLEAN RW_CHARACTER RW_CLOSE RW_CONSTANT RW_COS RW_DEPEND RW_DIV RW_DO RW_ELSE RW_EQ RW_FIRSTCHAR RW_FUNCTION RW_IF RW_INPUT RW_INTEGER RW_INTEGERTOREAL RW_ISKOSONG RW_ITERATE RW_JUDUL RW_KAMUS RW_LASTCHAR RW_LOKAL RW_LONG RW_MOD RW_MODUL RW_NEQ RW_NOT RW_OF RW_ON RW_OPEN RW_OR RW_OUTPUT RW_PRED RW_PROCEDURE RW_PROGRAM RW_READ RW_REAL RW_REALTOINTEGER RW_REPEAT RW_REWRITE RW_SEQFILE RW_SIN RW_STOP RW_STRING RW_SUCC RW_TAN RW_THEN RW_TIMES RW_TRAVERSAL RW_TYPE RW_UNTIL RW_WHILE RW_XOR S_ASSIGNMENT S_COLON S_COMMA S_CONCATENATION S_DIVIDE S_DOT S_DOUBLE_QUOTE S_ELEMENT_OF S_EQUAL S_GREATER_THAN S_GREATER_THAN_EQUAL S_LEFT_BRACKET S_LEFT_CURLY_BRACKET S_LEFT_SQUARE_BRACKET S_LESS_THAN S_LESS_THAN_EQUAL S_MINUS S_NOT_EQUAL S_PLUS S_POWER S_RETURN S_RIGHT_BRACKET S_RIGHT_CURLY_BRACKET S_RIGHT_SQUARE_BRACKET S_SEMI_COLON S_SINGLE_QUOTE S_TIMES S_UP_TO WHITESPACEfile :   program\n        program  :   RW_PROGRAM identifier block\n                    |   function_declaration  block\n                    |   procedure_declaration block\n        identifier_list  : identifier_list S_COMMA identifier\n                            | identifier\n        kamus_declaration    :     RW_KAMUS\n                                |   RW_KAMUS RW_LOKAL\n        block    :   kamus_declaration INDENT constant_declaration_block type_declaration_block variable_declaration_block procedure_and_function_declaration_block algorithm_block procedure_and_function_implementation_block\n                    | kamus_declaration algorithm_block procedure_and_function_implementation_block\n        constant_declaration_block  : empty\n                    | constant_declaration\n        type_declaration_block  :   empty\n                    |   type_declaration\n        variable_declaration_block  :   empty\n                    |   variable_declaration\n        procedure_and_function_declaration_block  :   DEDENT\n                    |   procedure_and_function_declaration DEDENT\n        algorithm_block  :   RW_ALGORITMA statement_part\n        procedure_and_function_implementation_block  :   empty\n                    |   subprogram_implementation_list\n        subprogram_implementation_list : subprogram_implementation_list subprogram_implementation\n                                        | subprogram_implementation\n        subprogram_implementation : procedure_implementation\n                                     | function_implementation\n        procedure_implementation :   procedure_declaration   procedure_implementation_block\n                                    |   procedure_declaration\n        procedure_implementation_block   :   kamus_declaration INDENT constant_declaration_block type_declaration_block variable_declaration_block DEDENT algorithm_block\n                                            | kamus_declaration algorithm_block\n        function_implementation  :   function_declaration function_implementation_block\n                                    |   function_declaration\n        function_implementation_block    :   kamus_declaration INDENT constant_declaration_block type_declaration_block variable_declaration_block DEDENT algorithm_block\n                                            | kamus_declaration algorithm_block\n        type_denoter :   ordinal_type\n                        |   structured_type\n                        |   RW_INTEGER\n                        |   RW_REAL\n                        |   RW_STRING\n                        |   RW_CHARACTER\n                        |   RW_BOOLEAN\n        ordinal_type :   enumerated_type\n                        |   subrange_type\n                        |   identifier\n        enumerated_type  :   S_LEFT_BRACKET identifier_list S_RIGHT_BRACKET\n        subrange_type    :  subrange_type_option\n        subrange_type_option    :   subrange_option S_UP_TO subrange_option\n        subrange_option  :   identifier\n                            |   constant\n                            |   function_designator\n                            |   expression\n        structured_type  :   array_type\n        array_type   :   RW_ARRAY array_index RW_OF component_type\n        array_index  :   S_LEFT_SQUARE_BRACKET index_list S_RIGHT_SQUARE_BRACKET\n        index_list   :   index_list S_COMMA index_type\n                        |   index_type\n        index_type   :   ordinal_type\n        component_type   :   type_denotervariable_declaration :  variable_declaration variable_sub_declaration\n                                |   variable_sub_declaration\n        variable_sub_declaration :   identifier_list S_COLON type_denoter\n        variable_declaration_comma   :   variable_sub_declaration\n                                        |   variable_sub_declaration S_COMMA variable_declaration_comma\n        constant_declaration :   constant_declaration constant_sub_declaration\n                                |   constant_sub_declaration\n        constant_sub_declaration :   RW_CONSTANT identifier S_COLON type_denoter S_EQUAL constant\n        type_declaration :   type_declaration type_sub_declaration\n                            |   type_sub_declaration\n        type_sub_declaration :   RW_TYPE identifier S_COLON type_variety\n        type_variety :   type_denoter\n                        |   type_user_defined\n        type_user_defined    :   S_LESS_THAN variable_declaration_comma S_GREATER_THAN\n        procedure_and_function_declaration   :   procedure_and_function_declaration procedure_and_function_sub_declaration\n                                                |   procedure_and_function_sub_declaration\n        procedure_and_function_sub_declaration   :   procedure_declaration\n                                                    |   function_declaration\n        procedure_declaration    :  procedure_identifier formal_parameter_list\n        procedure_identifier :   RW_PROCEDURE identifier\n        formal_parameter_list    :   S_LEFT_BRACKET formal_parameter_section_list S_RIGHT_BRACKET\n        formal_parameter_section_list    :   empty\n                                            |   formal_parameter_section\n        formal_parameter_section :   formal_parameter_section S_SEMI_COLON parameter_specification\n                                    |   formal_parameter_section S_COMMA parameter_specification\n                                    |   parameter_specification\n        parameter_specification  :   procedure_parameter_type  variable_sub_declaration\n        procedure_parameter_type :   RW_INPUT\n                                    |   RW_OUTPUT\n                                    |   RW_INPUT S_DIVIDE RW_OUTPUT\n        function_declaration :   function_identification function_formal_parameter_list function_return_type\n                                |   function_identification function_return_type\n        function_identification  :   RW_FUNCTION identifier\n        function_return_type :   S_RETURN type_denoter\n        function_formal_parameter_list   :   S_LEFT_BRACKET function_parameter_list_option S_RIGHT_BRACKET\n        function_actual_parameter_list   :   S_LEFT_BRACKET actual_parameter_list S_RIGHT_BRACKET\n        function_parameter_list_option   :   function_parameter_list\n                                            |   empty\n        function_parameter_list  :   function_parameter_list S_SEMI_COLON function_parameter_declaration\n                                    |   function_parameter_list S_COMMA function_parameter_declaration\n                                    |   function_parameter_declaration\n        function_parameter_declaration   :   variable_sub_declaration\n        statement_part   :   compound_statement\n        compound_statement   :   INDENT  statement_sequence  DEDENT\n        statement_sequence   :   statement_sequence S_SEMI_COLON statement\n                                |   statement_sequence statement\n                                |   statement\n        statement    : assignment_statement\n                        | procedure_statement\n                        | function_returned_statement\n                        |   if_statement\n                        | depend_on_statement\n                        | while_statement\n                        | traversal_statement\n                        |   repeat_statement\n                        |   iterate_stop_statement\n        assignment_statement :   variable_access S_ASSIGNMENT expression\n        procedure_statement :   builtin_procedure_statements\n                                |   identifier S_LEFT_BRACKET actual_parameter_list S_RIGHT_BRACKET\n                                |   identifier\n        actual_parameter_list    :   actual_parameter_list S_COMMA actual_parameter\n                                    |   actual_parameter\n        actual_parameter :   expression\n        builtin_procedure_statements     :   input_statement\n                                            |   output_statement\n        input_statement  :   RW_INPUT S_LEFT_BRACKET input_statement_parameter_list S_RIGHT_BRACKET\n        input_statement_parameter_list   :   input_statement_parameter_list S_COMMA input_statement_parameter\n                                            |   input_statement_parameter\n        input_statement_parameter    :   variable_access\n        output_statement  :   RW_OUTPUT S_LEFT_BRACKET output_statement_parameter_list S_RIGHT_BRACKET\n        output_statement_parameter_list  :   output_statement_parameter_list S_COMMA output_statement_parameter\n                                            |   output_statement_parameter\n        output_statement_parameter   :   expression\n        function_returned_statement  :   S_RETURN expression\n        depend_on_statement  :   RW_DEPEND RW_ON S_LEFT_BRACKET input_statement_parameter_list S_RIGHT_BRACKET INDENT depend_on_action_list DEDENT\n        depend_on_action_list    :   depend_on_action_list   depend_on_action\n                                            |   depend_on_action\n        depend_on_action :   expression S_COLON INDENT statement_sequence DEDENT\n        if_statement : RW_IF boolean_expression RW_THEN compound_statement\n                        | RW_IF boolean_expression RW_THEN compound_statement RW_ELSE compound_statement\n        boolean_expression   :   expression\n        repeat_statement :   repeat_until_statement\n                            |   repeat_times_statement\n        repeat_until_statement   :   RW_REPEAT compound_statement RW_UNTIL boolean_expression\n        repeat_times_statement   :   RW_REPEAT variable_access RW_TIMES compound_statement\n                                    |   RW_REPEAT integer_constant RW_TIMES compound_statement\n                                    |   RW_REPEAT function_designator RW_TIMES compound_statement\n        while_statement   :   RW_WHILE boolean_expression RW_DO compound_statement\n        iterate_stop_statement   :   RW_ITERATE compound_statement RW_STOP boolean_expression compound_statement\n        traversal_statement  :   control_variable RW_TRAVERSAL traversal_range_value compound_statement\n        traversal_range_value    :   S_LEFT_SQUARE_BRACKET subrange_type S_RIGHT_SQUARE_BRACKET\n        control_variable :   identifier\n        unsigned_constant :  non_string_constant\n                            |   string_char_constant\n                            |   boolean_constant\n                            |   nil_constant\n        constant :   string_char_constant\n                    |   non_string_constant\n                    |   sign non_string_constant\n                    |   boolean_constant\n                    |   nil_constant\n        sign     :   S_PLUS\n                    |   S_MINUS\n        boolean_constant :   L_BOOLEAN_TRUE\n                            |   L_BOOLEAN_FALSE\n        non_string_constant  :    integer_constant\n                                |    real_constant\n        integer_constant :   L_INTEGER_NUMBER\n        real_constant    :   L_REAL_NUMBER\n        string_char_constant :   string_constant\n                                |   char_constant\n        string_constant    :   L_STRING\n        char_constant    :   L_CHARACTER\n        nil_constant :   L_NIL\n        variable_access : identifier\n                            | indexed_variable\n                            | field_designator\n                            | function_designator\n        indexed_variable :   variable_access S_LEFT_SQUARE_BRACKET index_expression_list S_RIGHT_SQUARE_BRACKET\n        index_expression_list    :   index_expression_list S_COMMA expression\n                                    |   expression\n        field_designator :   variable_access S_DOT identifier\n        expression : expression relational_op additive_expression\n                    |   additive_expression\n        relational_op : S_EQUAL\n                | S_NOT_EQUAL\n                | S_LESS_THAN_EQUAL\n                | S_GREATER_THAN_EQUAL\n                | S_LESS_THAN\n                | S_GREATER_THAN\n                | S_ELEMENT_OF\n                | RW_EQ\n                | RW_NEQ\n        additive_expression : additive_expression additive_op multiplicative_expression\n                            |   multiplicative_expression\n        additive_op : S_PLUS\n                    | S_MINUS\n                    | RW_OR\n                    | RW_XOR\n        multiplicative_expression : multiplicative_expression multiplicative_op unary_expression\n                                    |   unary_expression\n        multiplicative_op : S_TIMES\n                            | S_DIVIDE\n                            | RW_DIV\n                            | RW_MOD\n                            | RW_AND\n        unary_expression : unary_op unary_expression\n                        |   exponentiation_expression\n        exponentiation_expression    :   primary_expression\n                                        |   primary_expression S_POWER exponentiation_expression\n        unary_op : S_PLUS\n            |   S_MINUS\n            |   RW_NOT\n        primary_expression : variable_access\n                            | unsigned_constant\n                            | S_LEFT_BRACKET expression S_RIGHT_BRACKET\n                            | set_constructor\n                            | function_designator\n        set_constructor  :   S_LEFT_SQUARE_BRACKET member_designator_list S_RIGHT_SQUARE_BRACKET\n                            |   S_LEFT_SQUARE_BRACKET S_RIGHT_SQUARE_BRACKET\n        member_designator_list   :   member_designator_list  S_COMMA member_designator\n                                    |   member_designator\n        member_designator    :   member_designator S_UP_TO   expression\n                                |   expression\n        function_designator  :    user_defined_function_call\n                                |   math_function_call\n                                |   string_function_call\n                                |   converter_function_call\n        user_defined_function_call    :   identifier function_actual_parameter_list\n        math_function_call   :   abs_function\n                                |   sin_function\n                                |   cos_function\n                                |   tan_function\n                                |   succ_function\n                                |   pred_function\n        abs_function : RW_ABS S_LEFT_BRACKET expression S_RIGHT_BRACKET\n        sin_function :   RW_SIN S_LEFT_BRACKET expression S_RIGHT_BRACKET\n        cos_function :   RW_COS S_LEFT_BRACKET expression S_RIGHT_BRACKET\n        tan_function :   RW_TAN S_LEFT_BRACKET expression S_RIGHT_BRACKET\n        succ_function    :   RW_SUCC S_LEFT_BRACKET expression S_RIGHT_BRACKET\n        pred_function    :   RW_PRED S_LEFT_BRACKET expression S_RIGHT_BRACKET\n        string_function_call :   awal_function\n                                |   akhir_function\n                                |   firstchar_function\n                                |   lastchar_function\n                                |   long_function\n                                |   iskosong_function\n        awal_function    :   RW_AWAL S_LEFT_BRACKET expression S_RIGHT_BRACKET\n        akhir_function    :   RW_AKHIR S_LEFT_BRACKET expression S_RIGHT_BRACKET\n        firstchar_function    :   RW_FIRSTCHAR S_LEFT_BRACKET expression S_RIGHT_BRACKET\n        lastchar_function    :   RW_LASTCHAR S_LEFT_BRACKET expression S_RIGHT_BRACKET\n        long_function    :   RW_LONG S_LEFT_BRACKET expression S_RIGHT_BRACKET\n        iskosong_function    :   RW_ISKOSONG S_LEFT_BRACKET expression S_RIGHT_BRACKET\n        converter_function_call  :   integer_to_real\n                                    |   real_to_integer\n        integer_to_real  :   RW_INTEGERTOREAL S_LEFT_BRACKET expression S_RIGHT_BRACKET\n        real_to_integer  :   RW_REALTOINTEGER S_LEFT_BRACKET expression S_RIGHT_BRACKET\n        empty    :\n        identifier   :   IDENTIFIER\n        '
    
_lr_action_items = {'RW_PROGRAM':([0,],[3,]),'RW_FUNCTION':([0,11,17,20,25,26,29,37,38,39,40,41,42,43,44,45,46,47,48,50,53,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,108,110,112,113,114,115,116,117,126,127,128,129,133,134,135,136,137,138,139,140,147,155,156,157,158,159,173,199,200,205,208,213,214,215,216,218,220,221,223,255,260,261,266,267,268,269,270,285,288,289,295,296,297,298,299,303,305,306,324,326,327,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,350,351,352,353,354,381,383,384,385,386,409,410,411,412,413,424,431,432,],[8,-256,-89,-76,-255,8,-88,-91,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-51,-45,-48,-49,-50,-151,-150,-152,-153,-222,-223,-224,-225,-181,-167,-168,-163,-164,-161,-162,-171,-227,-228,-229,-230,-231,-232,-239,-240,-241,-242,-243,-244,-251,-252,-192,-169,-170,-165,-166,-198,-205,-206,-211,-212,-214,-173,-174,-255,-11,-12,-64,8,-23,-24,-25,-27,-31,-19,-100,-226,-175,-150,-151,-152,-153,-156,-204,-172,-217,-78,-255,-13,-14,-67,-63,-22,-26,-30,-60,-44,-213,-46,-47,-180,-191,-197,-207,-179,-216,8,-15,-16,-59,-66,-29,-33,-101,-93,-52,-57,-233,-234,-235,-236,-237,-238,-245,-246,-247,-248,-249,-250,-253,-254,-176,8,-73,-74,-75,-58,8,-72,-68,-69,-70,-65,-154,-155,-157,-158,-71,-28,-32,]),'RW_PROCEDURE':([0,11,17,20,25,26,29,37,38,39,40,41,42,43,44,45,46,47,48,50,53,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,108,110,112,113,114,115,116,117,126,127,128,129,133,134,135,136,137,138,139,140,147,155,156,157,158,159,173,199,200,205,208,213,214,215,216,218,220,221,223,255,260,261,266,267,268,269,270,285,288,289,295,296,297,298,299,303,305,306,324,326,327,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,350,351,352,353,354,381,383,384,385,386,409,410,411,412,413,424,431,432,],[9,-256,-89,-76,-255,9,-88,-91,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-51,-45,-48,-49,-50,-151,-150,-152,-153,-222,-223,-224,-225,-181,-167,-168,-163,-164,-161,-162,-171,-227,-228,-229,-230,-231,-232,-239,-240,-241,-242,-243,-244,-251,-252,-192,-169,-170,-165,-166,-198,-205,-206,-211,-212,-214,-173,-174,-255,-11,-12,-64,9,-23,-24,-25,-27,-31,-19,-100,-226,-175,-150,-151,-152,-153,-156,-204,-172,-217,-78,-255,-13,-14,-67,-63,-22,-26,-30,-60,-44,-213,-46,-47,-180,-191,-197,-207,-179,-216,9,-15,-16,-59,-66,-29,-33,-101,-93,-52,-57,-233,-234,-235,-236,-237,-238,-245,-246,-247,-248,-249,-250,-253,-254,-176,9,-73,-74,-75,-58,9,-72,-68,-69,-70,-65,-154,-155,-157,-158,-71,-28,-32,]),'$end':([1,2,11,12,15,17,20,24,26,29,37,38,39,40,41,42,43,44,45,46,47,48,50,53,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,108,110,112,113,114,115,116,117,131,132,133,134,135,136,137,138,139,140,147,155,156,157,158,159,173,199,200,205,208,220,221,223,260,261,266,267,268,269,270,285,288,289,303,305,306,324,326,327,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,381,406,431,432,],[0,-1,-256,-3,-4,-89,-76,-2,-255,-88,-91,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-51,-45,-48,-49,-50,-151,-150,-152,-153,-222,-223,-224,-225,-181,-167,-168,-163,-164,-161,-162,-171,-227,-228,-229,-230,-231,-232,-239,-240,-241,-242,-243,-244,-251,-252,-192,-169,-170,-165,-166,-198,-205,-206,-211,-212,-214,-173,-174,-10,-20,-21,-23,-24,-25,-27,-31,-19,-100,-226,-175,-150,-151,-152,-153,-156,-204,-172,-217,-78,-22,-26,-30,-44,-213,-46,-47,-180,-191,-197,-207,-179,-216,-29,-33,-101,-93,-52,-57,-233,-234,-235,-236,-237,-238,-245,-246,-247,-248,-249,-250,-253,-254,-176,-255,-9,-28,-32,]),'IDENTIFIER':([3,8,9,11,18,19,25,38,39,40,41,42,43,44,45,46,47,48,49,50,53,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,108,109,110,111,112,113,114,115,116,117,118,123,124,125,126,127,128,129,130,141,143,144,145,146,147,148,149,153,154,155,156,157,158,159,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,205,213,214,215,216,217,218,225,226,227,228,229,230,231,232,233,234,235,237,238,239,240,242,244,245,248,249,250,255,260,261,262,266,267,268,269,270,285,288,289,290,291,294,297,298,299,301,302,304,306,307,308,309,310,311,313,322,323,324,325,326,327,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,354,355,357,358,359,360,363,366,367,368,384,385,386,387,389,390,391,392,394,395,398,399,400,401,402,403,404,405,409,410,411,412,413,421,424,425,428,429,433,434,436,437,439,440,441,],[11,11,11,-256,11,11,-255,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-51,11,-45,-48,-49,-50,-151,-150,-152,-153,-222,-223,-224,-225,-181,-167,-168,-163,-164,-208,-209,-161,-162,-171,-227,-228,-229,-230,-231,-232,-239,-240,-241,-242,-243,-244,-251,-252,-192,-169,-170,-165,-166,-198,11,-205,-210,-206,-211,-212,-214,-173,-174,11,11,-85,-86,-255,-11,-12,-64,11,11,11,11,11,11,-226,11,11,-208,-209,-175,-150,-151,-152,-153,11,11,11,-182,-183,-184,-185,-186,-187,-188,-189,-190,-156,11,-193,-194,-195,-196,11,-199,-200,-201,-202,-203,11,11,11,11,11,11,11,11,11,11,11,11,11,11,-204,-172,11,11,11,-217,11,-13,-14,-67,11,-63,11,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-115,-117,11,11,11,-139,-140,-121,-122,11,-60,-44,-213,11,-46,-47,-180,-191,-197,-207,-179,-216,11,11,-87,11,-59,-66,11,-255,-255,-101,11,-103,11,11,-131,-138,11,11,-93,11,-52,-57,11,-233,-234,-235,-236,-237,-238,-245,-246,-247,-248,-249,-250,-253,-254,-176,11,-58,11,-255,-255,-102,-114,11,11,11,11,-68,-69,-70,11,11,11,-116,-136,-145,-147,-141,-142,-143,-144,-123,11,-127,11,-65,-154,-155,-157,-158,-146,-71,11,-137,11,11,-134,-132,-133,11,11,-135,]),'RW_KAMUS':([4,5,10,11,17,20,29,37,38,39,40,41,42,43,44,45,46,47,48,50,53,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,108,110,112,113,114,115,116,117,137,138,147,155,156,157,158,159,173,199,200,205,208,260,261,266,267,268,269,270,285,288,289,324,326,327,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,],[14,14,14,-256,-89,-76,-88,-91,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-51,-45,-48,-49,-50,-151,-150,-152,-153,-222,-223,-224,-225,-181,-167,-168,-163,-164,-161,-162,-171,-227,-228,-229,-230,-231,-232,-239,-240,-241,-242,-243,-244,-251,-252,-192,-169,-170,-165,-166,-198,-205,-206,-211,-212,-214,-173,-174,14,14,-226,-175,-150,-151,-152,-153,-156,-204,-172,-217,-78,-44,-213,-46,-47,-180,-191,-197,-207,-179,-216,-93,-52,-57,-233,-234,-235,-236,-237,-238,-245,-246,-247,-248,-249,-250,-253,-254,-176,]),'S_LEFT_BRACKET':([6,7,11,19,22,23,47,49,70,71,94,95,96,97,98,99,100,101,102,103,104,105,106,107,109,111,118,145,148,149,152,153,154,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,200,201,202,238,239,240,242,251,252,262,267,290,291,301,309,310,314,323,325,329,345,355,366,367,368,405,429,433,434,437,441,],[18,21,-256,49,-90,-77,148,149,-208,-209,185,186,187,188,189,190,191,192,193,194,195,196,197,198,149,-210,149,49,149,149,148,-208,-209,49,149,149,-182,-183,-184,-185,-186,-187,-188,-189,-190,149,-193,-194,-195,-196,149,-199,-200,-201,-202,-203,149,149,149,149,149,149,149,149,149,149,149,149,149,149,148,149,149,310,149,149,149,322,323,49,148,149,149,49,149,149,363,149,149,49,149,49,149,149,149,149,149,149,-134,-133,-135,]),'S_RETURN':([6,11,16,22,61,62,63,64,65,66,67,68,69,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,108,110,112,113,114,115,116,117,141,142,147,155,156,157,158,159,199,200,205,225,226,227,228,229,230,231,232,233,234,235,237,238,244,245,248,249,261,268,269,270,285,288,289,306,307,308,311,313,324,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,359,360,391,392,394,395,398,399,400,401,402,404,421,428,436,439,440,],[19,-256,19,-90,-222,-223,-224,-225,-181,-167,-168,-163,-164,-161,-162,-171,-227,-228,-229,-230,-231,-232,-239,-240,-241,-242,-243,-244,-251,-252,-192,-169,-170,-165,-166,-198,-205,-206,-211,-212,-214,-173,-174,239,-92,-226,-175,-150,-151,-152,-153,-204,-172,-217,239,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-115,-117,-139,-140,-121,-122,-213,-180,-191,-197,-207,-179,-216,-101,239,-103,-131,-138,-93,-233,-234,-235,-236,-237,-238,-245,-246,-247,-248,-249,-250,-253,-254,-176,-102,-114,-116,-136,-145,-147,-141,-142,-143,-144,-123,-127,-146,-137,-132,239,239,]),'S_COLON':([11,35,36,61,62,63,64,65,66,67,68,69,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,108,110,112,113,114,115,116,117,147,155,156,157,158,159,199,200,205,219,256,261,268,269,270,285,288,289,300,324,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,435,],[-256,145,-6,-222,-223,-224,-225,-181,-167,-168,-163,-164,-161,-162,-171,-227,-228,-229,-230,-231,-232,-239,-240,-241,-242,-243,-244,-251,-252,-192,-169,-170,-165,-166,-198,-205,-206,-211,-212,-214,-173,-174,-226,-175,-150,-151,-152,-153,-204,-172,-217,301,-5,-213,-180,-191,-197,-207,-179,-216,355,-93,-233,-234,-235,-236,-237,-238,-245,-246,-247,-248,-249,-250,-253,-254,-176,438,]),'S_COMMA':([11,31,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,50,53,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,108,110,112,113,114,115,116,117,121,122,147,150,152,155,156,157,158,159,173,199,200,204,205,206,207,211,247,253,254,255,256,257,258,259,260,261,263,264,265,266,267,268,269,270,285,286,287,288,289,292,293,324,326,327,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,346,347,361,372,373,374,375,376,377,378,379,380,393,408,422,423,],[-256,144,-98,-99,146,-6,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-51,-45,-48,-49,-50,-151,-150,-152,-153,-222,-223,-224,-225,-181,-167,-168,-163,-164,-161,-162,-171,-227,-228,-229,-230,-231,-232,-239,-240,-241,-242,-243,-244,-251,-252,-192,-169,-170,-165,-166,-198,-205,-206,-211,-212,-214,-173,-174,210,-83,-226,146,-6,-175,-150,-151,-152,-153,-156,-204,-172,290,-217,-219,-221,-84,-175,-96,-97,-60,-5,325,-119,-120,-44,-213,329,-55,-56,-46,-47,-180,-191,-197,-207,345,-178,-179,-216,-81,-82,-93,-52,-57,-233,-234,-235,-236,-237,-238,-245,-246,-247,-248,-249,-250,-253,-254,-176,-218,-220,325,403,-125,-126,405,-129,-130,-118,-54,-177,403,425,-124,-128,]),'DEDENT':([11,17,20,25,29,37,38,39,40,41,42,43,44,45,46,47,48,50,53,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,108,110,112,113,114,115,116,117,126,127,128,129,147,155,156,157,158,159,173,199,200,205,208,213,214,215,216,218,225,226,227,228,229,230,231,232,233,234,235,237,238,244,245,248,249,255,260,261,266,267,268,269,270,285,288,289,295,296,297,298,299,302,304,306,308,311,313,324,326,327,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,350,351,352,353,354,357,358,359,360,383,384,385,386,389,390,391,392,394,395,398,399,400,401,402,404,409,410,411,412,413,416,417,421,424,428,433,434,436,437,440,441,],[-256,-89,-76,-255,-88,-91,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-51,-45,-48,-49,-50,-151,-150,-152,-153,-222,-223,-224,-225,-181,-167,-168,-163,-164,-161,-162,-171,-227,-228,-229,-230,-231,-232,-239,-240,-241,-242,-243,-244,-251,-252,-192,-169,-170,-165,-166,-198,-205,-206,-211,-212,-214,-173,-174,-255,-11,-12,-64,-226,-175,-150,-151,-152,-153,-156,-204,-172,-217,-78,-255,-13,-14,-67,-63,306,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-115,-117,-139,-140,-121,-122,-60,-44,-213,-46,-47,-180,-191,-197,-207,-179,-216,349,-15,-16,-59,-66,-255,-255,-101,-103,-131,-138,-93,-52,-57,-233,-234,-235,-236,-237,-238,-245,-246,-247,-248,-249,-250,-253,-254,-176,382,-73,-74,-75,-58,-255,-255,-102,-114,-72,-68,-69,-70,-255,-255,-116,-136,-145,-147,-141,-142,-143,-144,-123,-127,-65,-154,-155,-157,-158,426,427,-146,-71,-137,436,-134,-132,-133,441,-135,]),'S_UP_TO':([11,47,52,53,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,108,110,112,113,114,115,116,117,147,155,156,157,158,159,173,199,200,205,206,207,261,267,268,269,270,285,288,289,324,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,346,347,],[-256,-47,162,-48,-49,-50,-151,-150,-152,-153,-222,-223,-224,-225,-181,-167,-168,-163,-164,-161,-162,-171,-227,-228,-229,-230,-231,-232,-239,-240,-241,-242,-243,-244,-251,-252,-192,-169,-170,-165,-166,-198,-205,-206,-211,-212,-214,-173,-174,-226,-175,-150,-151,-152,-153,-156,-204,-172,-217,291,-221,-213,-47,-180,-191,-197,-207,-179,-216,-93,-233,-234,-235,-236,-237,-238,-245,-246,-247,-248,-249,-250,-253,-254,-176,291,-220,]),'S_LEFT_SQUARE_BRACKET':([11,19,47,49,51,54,61,62,63,64,70,71,75,76,77,78,79,80,81,82,83,84,85,86,87,88,109,111,113,116,117,118,145,147,148,149,152,153,154,155,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,200,201,202,236,238,239,240,242,247,262,267,288,290,291,301,309,310,316,319,321,323,324,325,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,355,366,367,368,374,391,405,429,433,434,437,441,],[-256,118,-172,118,161,-175,-222,-223,-224,-225,-208,-209,-227,-228,-229,-230,-231,-232,-239,-240,-241,-242,-243,-244,-251,-252,118,-210,202,-173,-174,118,118,-226,118,118,-172,-208,-209,-175,118,118,118,-182,-183,-184,-185,-186,-187,-188,-189,-190,118,-193,-194,-195,-196,118,-199,-200,-201,-202,-203,118,118,118,118,118,118,118,118,118,118,118,118,118,118,-172,118,118,202,-172,118,118,118,-175,118,-172,-179,118,118,118,118,118,366,202,-175,118,-93,118,118,-233,-234,-235,-236,-237,-238,-245,-246,-247,-248,-249,-250,-253,-254,-176,118,118,118,118,118,202,-93,118,118,118,-134,-133,-135,]),'S_DOT':([11,47,54,61,62,63,64,75,76,77,78,79,80,81,82,83,84,85,86,87,88,113,116,117,147,152,155,200,236,238,247,267,288,319,321,324,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,374,391,],[-256,-172,-175,-222,-223,-224,-225,-227,-228,-229,-230,-231,-232,-239,-240,-241,-242,-243,-244,-251,-252,203,-173,-174,-226,-172,-175,-172,203,-172,-175,-172,-179,203,-175,-93,-233,-234,-235,-236,-237,-238,-245,-246,-247,-248,-249,-250,-253,-254,-176,203,-93,]),'S_POWER':([11,47,54,56,57,59,60,61,62,63,64,66,67,68,69,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,91,92,93,112,113,114,115,116,117,147,152,155,156,157,158,159,200,205,261,267,288,289,324,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,],[-256,-172,-175,-151,-150,-152,-153,-222,-223,-224,-225,-167,-168,-163,-164,-161,-162,-171,-227,-228,-229,-230,-231,-232,-239,-240,-241,-242,-243,-244,-251,-252,-169,-170,-165,-166,201,-211,-212,-214,-173,-174,-226,-172,-175,-150,-151,-152,-153,-172,-217,-213,-172,-179,-216,-93,-233,-234,-235,-236,-237,-238,-245,-246,-247,-248,-249,-250,-253,-254,-176,]),'S_TIMES':([11,47,54,56,57,59,60,61,62,63,64,66,67,68,69,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,108,110,112,113,114,115,116,117,147,152,155,156,157,158,159,199,200,205,261,267,269,270,285,288,289,324,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,],[-256,-172,-175,-151,-150,-152,-153,-222,-223,-224,-225,-167,-168,-163,-164,-161,-162,-171,-227,-228,-229,-230,-231,-232,-239,-240,-241,-242,-243,-244,-251,-252,180,-169,-170,-165,-166,-198,-205,-206,-211,-212,-214,-173,-174,-226,-172,-175,-150,-151,-152,-153,-204,-172,-217,-213,-172,180,-197,-207,-179,-216,-93,-233,-234,-235,-236,-237,-238,-245,-246,-247,-248,-249,-250,-253,-254,-176,]),'S_DIVIDE':([11,47,54,56,57,59,60,61,62,63,64,66,67,68,69,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,108,110,112,113,114,115,116,117,124,147,152,155,156,157,158,159,199,200,205,261,267,269,270,285,288,289,324,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,],[-256,-172,-175,-151,-150,-152,-153,-222,-223,-224,-225,-167,-168,-163,-164,-161,-162,-171,-227,-228,-229,-230,-231,-232,-239,-240,-241,-242,-243,-244,-251,-252,181,-169,-170,-165,-166,-198,-205,-206,-211,-212,-214,-173,-174,212,-226,-172,-175,-150,-151,-152,-153,-204,-172,-217,-213,-172,181,-197,-207,-179,-216,-93,-233,-234,-235,-236,-237,-238,-245,-246,-247,-248,-249,-250,-253,-254,-176,]),'RW_DIV':([11,47,54,56,57,59,60,61,62,63,64,66,67,68,69,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,108,110,112,113,114,115,116,117,147,152,155,156,157,158,159,199,200,205,261,267,269,270,285,288,289,324,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,],[-256,-172,-175,-151,-150,-152,-153,-222,-223,-224,-225,-167,-168,-163,-164,-161,-162,-171,-227,-228,-229,-230,-231,-232,-239,-240,-241,-242,-243,-244,-251,-252,182,-169,-170,-165,-166,-198,-205,-206,-211,-212,-214,-173,-174,-226,-172,-175,-150,-151,-152,-153,-204,-172,-217,-213,-172,182,-197,-207,-179,-216,-93,-233,-234,-235,-236,-237,-238,-245,-246,-247,-248,-249,-250,-253,-254,-176,]),'RW_MOD':([11,47,54,56,57,59,60,61,62,63,64,66,67,68,69,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,108,110,112,113,114,115,116,117,147,152,155,156,157,158,159,199,200,205,261,267,269,270,285,288,289,324,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,],[-256,-172,-175,-151,-150,-152,-153,-222,-223,-224,-225,-167,-168,-163,-164,-161,-162,-171,-227,-228,-229,-230,-231,-232,-239,-240,-241,-242,-243,-244,-251,-252,183,-169,-170,-165,-166,-198,-205,-206,-211,-212,-214,-173,-174,-226,-172,-175,-150,-151,-152,-153,-204,-172,-217,-213,-172,183,-197,-207,-179,-216,-93,-233,-234,-235,-236,-237,-238,-245,-246,-247,-248,-249,-250,-253,-254,-176,]),'RW_AND':([11,47,54,56,57,59,60,61,62,63,64,66,67,68,69,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,108,110,112,113,114,115,116,117,147,152,155,156,157,158,159,199,200,205,261,267,269,270,285,288,289,324,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,],[-256,-172,-175,-151,-150,-152,-153,-222,-223,-224,-225,-167,-168,-163,-164,-161,-162,-171,-227,-228,-229,-230,-231,-232,-239,-240,-241,-242,-243,-244,-251,-252,184,-169,-170,-165,-166,-198,-205,-206,-211,-212,-214,-173,-174,-226,-172,-175,-150,-151,-152,-153,-204,-172,-217,-213,-172,184,-197,-207,-179,-216,-93,-233,-234,-235,-236,-237,-238,-245,-246,-247,-248,-249,-250,-253,-254,-176,]),'S_PLUS':([11,19,47,49,54,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,108,109,110,111,112,113,114,115,116,117,118,145,147,148,149,152,153,154,155,156,157,158,159,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,202,205,239,240,242,261,262,267,268,269,270,285,288,289,290,291,301,309,310,323,324,325,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,355,366,367,368,388,405,429,433,434,437,441,],[-256,70,-172,153,-175,-151,-150,-152,-153,-222,-223,-224,-225,175,-167,-168,-163,-164,-208,-209,-161,-162,-171,-227,-228,-229,-230,-231,-232,-239,-240,-241,-242,-243,-244,-251,-252,-192,-169,-170,-165,-166,-198,153,-205,-210,-206,-211,-212,-214,-173,-174,153,70,-226,153,153,-172,-208,-209,-175,-150,-151,-152,-153,70,70,153,-182,-183,-184,-185,-186,-187,-188,-189,-190,153,-193,-194,-195,-196,153,-199,-200,-201,-202,-203,153,153,153,153,153,153,153,153,153,153,153,153,153,153,-204,-172,153,-217,153,153,153,-213,70,-172,175,-191,-197,-207,-179,-216,153,153,70,153,153,153,-93,153,70,-233,-234,-235,-236,-237,-238,-245,-246,-247,-248,-249,-250,-253,-254,-176,153,70,70,153,153,414,153,153,153,-134,-133,-135,]),'S_MINUS':([11,19,47,49,54,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,108,109,110,111,112,113,114,115,116,117,118,145,147,148,149,152,153,154,155,156,157,158,159,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,202,205,239,240,242,261,262,267,268,269,270,285,288,289,290,291,301,309,310,323,324,325,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,355,366,367,368,388,405,429,433,434,437,441,],[-256,71,-172,154,-175,-151,-150,-152,-153,-222,-223,-224,-225,176,-167,-168,-163,-164,-208,-209,-161,-162,-171,-227,-228,-229,-230,-231,-232,-239,-240,-241,-242,-243,-244,-251,-252,-192,-169,-170,-165,-166,-198,154,-205,-210,-206,-211,-212,-214,-173,-174,154,71,-226,154,154,-172,-208,-209,-175,-150,-151,-152,-153,71,71,154,-182,-183,-184,-185,-186,-187,-188,-189,-190,154,-193,-194,-195,-196,154,-199,-200,-201,-202,-203,154,154,154,154,154,154,154,154,154,154,154,154,154,154,-204,-172,154,-217,154,154,154,-213,71,-172,176,-191,-197,-207,-179,-216,154,154,71,154,154,154,-93,154,71,-233,-234,-235,-236,-237,-238,-245,-246,-247,-248,-249,-250,-253,-254,-176,154,71,71,154,154,415,154,154,154,-134,-133,-135,]),'RW_OR':([11,47,54,56,57,59,60,61,62,63,64,65,66,67,68,69,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,108,110,112,113,114,115,116,117,147,152,155,156,157,158,159,199,200,205,261,267,268,269,270,285,288,289,324,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,],[-256,-172,-175,-151,-150,-152,-153,-222,-223,-224,-225,177,-167,-168,-163,-164,-161,-162,-171,-227,-228,-229,-230,-231,-232,-239,-240,-241,-242,-243,-244,-251,-252,-192,-169,-170,-165,-166,-198,-205,-206,-211,-212,-214,-173,-174,-226,-172,-175,-150,-151,-152,-153,-204,-172,-217,-213,-172,177,-191,-197,-207,-179,-216,-93,-233,-234,-235,-236,-237,-238,-245,-246,-247,-248,-249,-250,-253,-254,-176,]),'RW_XOR':([11,47,54,56,57,59,60,61,62,63,64,65,66,67,68,69,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,108,110,112,113,114,115,116,117,147,152,155,156,157,158,159,199,200,205,261,267,268,269,270,285,288,289,324,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,],[-256,-172,-175,-151,-150,-152,-153,-222,-223,-224,-225,178,-167,-168,-163,-164,-161,-162,-171,-227,-228,-229,-230,-231,-232,-239,-240,-241,-242,-243,-244,-251,-252,-192,-169,-170,-165,-166,-198,-205,-206,-211,-212,-214,-173,-174,-226,-172,-175,-150,-151,-152,-153,-204,-172,-217,-213,-172,178,-191,-197,-207,-179,-216,-93,-233,-234,-235,-236,-237,-238,-245,-246,-247,-248,-249,-250,-253,-254,-176,]),'S_EQUAL':([11,38,39,40,41,42,43,44,45,46,47,48,50,53,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,108,110,112,113,114,115,116,117,147,151,152,155,156,157,158,159,173,199,200,205,207,259,260,261,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,287,288,289,311,313,324,326,327,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,347,356,360,377,380,435,],[-256,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-51,-45,-48,-49,164,-151,-150,-152,-153,-222,-223,-224,-225,-181,-167,-168,-163,-164,-161,-162,-171,-227,-228,-229,-230,-231,-232,-239,-240,-241,-242,-243,-244,-251,-252,-192,-169,-170,-165,-166,-198,-205,-206,-211,-212,-214,-173,-174,-226,164,-172,-175,-150,-151,-152,-153,-156,-204,-172,-217,164,164,-44,-213,-46,-47,-180,-191,-197,164,164,164,164,164,164,164,164,164,164,164,164,164,164,-207,164,-179,-216,164,164,-93,-52,-57,-233,-234,-235,-236,-237,-238,-245,-246,-247,-248,-249,-250,-253,-254,-176,164,388,164,164,164,164,]),'S_NOT_EQUAL':([11,47,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,108,110,112,113,114,115,116,117,147,151,152,155,156,157,158,159,199,200,205,207,259,261,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,287,288,289,311,313,324,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,347,360,377,380,435,],[-256,-172,-175,165,-151,-150,-152,-153,-222,-223,-224,-225,-181,-167,-168,-163,-164,-161,-162,-171,-227,-228,-229,-230,-231,-232,-239,-240,-241,-242,-243,-244,-251,-252,-192,-169,-170,-165,-166,-198,-205,-206,-211,-212,-214,-173,-174,-226,165,-172,-175,-150,-151,-152,-153,-204,-172,-217,165,165,-213,-172,-180,-191,-197,165,165,165,165,165,165,165,165,165,165,165,165,165,165,-207,165,-179,-216,165,165,-93,-233,-234,-235,-236,-237,-238,-245,-246,-247,-248,-249,-250,-253,-254,-176,165,165,165,165,165,]),'S_LESS_THAN_EQUAL':([11,47,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,108,110,112,113,114,115,116,117,147,151,152,155,156,157,158,159,199,200,205,207,259,261,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,287,288,289,311,313,324,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,347,360,377,380,435,],[-256,-172,-175,166,-151,-150,-152,-153,-222,-223,-224,-225,-181,-167,-168,-163,-164,-161,-162,-171,-227,-228,-229,-230,-231,-232,-239,-240,-241,-242,-243,-244,-251,-252,-192,-169,-170,-165,-166,-198,-205,-206,-211,-212,-214,-173,-174,-226,166,-172,-175,-150,-151,-152,-153,-204,-172,-217,166,166,-213,-172,-180,-191,-197,166,166,166,166,166,166,166,166,166,166,166,166,166,166,-207,166,-179,-216,166,166,-93,-233,-234,-235,-236,-237,-238,-245,-246,-247,-248,-249,-250,-253,-254,-176,166,166,166,166,166,]),'S_GREATER_THAN_EQUAL':([11,47,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,108,110,112,113,114,115,116,117,147,151,152,155,156,157,158,159,199,200,205,207,259,261,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,287,288,289,311,313,324,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,347,360,377,380,435,],[-256,-172,-175,167,-151,-150,-152,-153,-222,-223,-224,-225,-181,-167,-168,-163,-164,-161,-162,-171,-227,-228,-229,-230,-231,-232,-239,-240,-241,-242,-243,-244,-251,-252,-192,-169,-170,-165,-166,-198,-205,-206,-211,-212,-214,-173,-174,-226,167,-172,-175,-150,-151,-152,-153,-204,-172,-217,167,167,-213,-172,-180,-191,-197,167,167,167,167,167,167,167,167,167,167,167,167,167,167,-207,167,-179,-216,167,167,-93,-233,-234,-235,-236,-237,-238,-245,-246,-247,-248,-249,-250,-253,-254,-176,167,167,167,167,167,]),'S_LESS_THAN':([11,47,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,108,110,112,113,114,115,116,117,147,151,152,155,156,157,158,159,199,200,205,207,259,261,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,287,288,289,311,313,324,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,347,355,360,377,380,435,],[-256,-172,-175,168,-151,-150,-152,-153,-222,-223,-224,-225,-181,-167,-168,-163,-164,-161,-162,-171,-227,-228,-229,-230,-231,-232,-239,-240,-241,-242,-243,-244,-251,-252,-192,-169,-170,-165,-166,-198,-205,-206,-211,-212,-214,-173,-174,-226,168,-172,-175,-150,-151,-152,-153,-204,-172,-217,168,168,-213,-172,-180,-191,-197,168,168,168,168,168,168,168,168,168,168,168,168,168,168,-207,168,-179,-216,168,168,-93,-233,-234,-235,-236,-237,-238,-245,-246,-247,-248,-249,-250,-253,-254,-176,168,387,168,168,168,168,]),'S_GREATER_THAN':([11,38,39,40,41,42,43,44,45,46,47,48,50,53,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,108,110,112,113,114,115,116,117,147,151,152,155,156,157,158,159,173,199,200,205,207,255,259,260,261,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,287,288,289,311,313,324,326,327,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,347,360,377,380,407,408,430,435,],[-256,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-51,-45,-48,-49,169,-151,-150,-152,-153,-222,-223,-224,-225,-181,-167,-168,-163,-164,-161,-162,-171,-227,-228,-229,-230,-231,-232,-239,-240,-241,-242,-243,-244,-251,-252,-192,-169,-170,-165,-166,-198,-205,-206,-211,-212,-214,-173,-174,-226,169,-172,-175,-150,-151,-152,-153,-156,-204,-172,-217,169,-60,169,-44,-213,-46,-47,-180,-191,-197,169,169,169,169,169,169,169,169,169,169,169,169,169,169,-207,169,-179,-216,169,169,-93,-52,-57,-233,-234,-235,-236,-237,-238,-245,-246,-247,-248,-249,-250,-253,-254,-176,169,169,169,169,424,-61,-62,169,]),'S_ELEMENT_OF':([11,47,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,108,110,112,113,114,115,116,117,147,151,152,155,156,157,158,159,199,200,205,207,259,261,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,287,288,289,311,313,324,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,347,360,377,380,435,],[-256,-172,-175,170,-151,-150,-152,-153,-222,-223,-224,-225,-181,-167,-168,-163,-164,-161,-162,-171,-227,-228,-229,-230,-231,-232,-239,-240,-241,-242,-243,-244,-251,-252,-192,-169,-170,-165,-166,-198,-205,-206,-211,-212,-214,-173,-174,-226,170,-172,-175,-150,-151,-152,-153,-204,-172,-217,170,170,-213,-172,-180,-191,-197,170,170,170,170,170,170,170,170,170,170,170,170,170,170,-207,170,-179,-216,170,170,-93,-233,-234,-235,-236,-237,-238,-245,-246,-247,-248,-249,-250,-253,-254,-176,170,170,170,170,170,]),'RW_EQ':([11,47,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,108,110,112,113,114,115,116,117,147,151,152,155,156,157,158,159,199,200,205,207,259,261,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,287,288,289,311,313,324,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,347,360,377,380,435,],[-256,-172,-175,171,-151,-150,-152,-153,-222,-223,-224,-225,-181,-167,-168,-163,-164,-161,-162,-171,-227,-228,-229,-230,-231,-232,-239,-240,-241,-242,-243,-244,-251,-252,-192,-169,-170,-165,-166,-198,-205,-206,-211,-212,-214,-173,-174,-226,171,-172,-175,-150,-151,-152,-153,-204,-172,-217,171,171,-213,-172,-180,-191,-197,171,171,171,171,171,171,171,171,171,171,171,171,171,171,-207,171,-179,-216,171,171,-93,-233,-234,-235,-236,-237,-238,-245,-246,-247,-248,-249,-250,-253,-254,-176,171,171,171,171,171,]),'RW_NEQ':([11,47,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,108,110,112,113,114,115,116,117,147,151,152,155,156,157,158,159,199,200,205,207,259,261,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,287,288,289,311,313,324,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,347,360,377,380,435,],[-256,-172,-175,172,-151,-150,-152,-153,-222,-223,-224,-225,-181,-167,-168,-163,-164,-161,-162,-171,-227,-228,-229,-230,-231,-232,-239,-240,-241,-242,-243,-244,-251,-252,-192,-169,-170,-165,-166,-198,-205,-206,-211,-212,-214,-173,-174,-226,172,-172,-175,-150,-151,-152,-153,-204,-172,-217,172,172,-213,-172,-180,-191,-197,172,172,172,172,172,172,172,172,172,172,172,172,172,172,-207,172,-179,-216,172,172,-93,-233,-234,-235,-236,-237,-238,-245,-246,-247,-248,-249,-250,-253,-254,-176,172,172,172,172,172,]),'S_RIGHT_BRACKET':([11,18,21,30,31,32,33,34,38,39,40,41,42,43,44,45,46,47,48,50,53,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,108,110,112,113,114,115,116,117,119,120,121,122,147,150,151,152,155,156,157,158,159,173,199,200,205,211,247,253,254,255,256,257,258,259,260,261,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,288,289,292,293,324,326,327,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,361,372,373,374,375,376,377,378,393,422,423,],[-256,-255,-255,142,-94,-95,-98,-99,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-51,-45,-48,-49,-50,-151,-150,-152,-153,-222,-223,-224,-225,-181,-167,-168,-163,-164,-161,-162,-171,-227,-228,-229,-230,-231,-232,-239,-240,-241,-242,-243,-244,-251,-252,-192,-169,-170,-165,-166,-198,-205,-206,-211,-212,-214,-173,-174,208,-79,-80,-83,-226,260,261,-6,-175,-150,-151,-152,-153,-156,-204,-172,-217,-84,-175,-96,-97,-60,-5,324,-119,-120,-44,-213,-46,-47,-180,-191,-197,330,331,332,333,334,335,336,337,338,339,340,341,342,343,-207,-179,-216,-81,-82,-93,-52,-57,-233,-234,-235,-236,-237,-238,-245,-246,-247,-248,-249,-250,-253,-254,-176,391,402,-125,-126,404,-129,-130,-118,419,-124,-128,]),'S_RIGHT_SQUARE_BRACKET':([11,45,46,47,50,53,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,108,110,112,113,114,115,116,117,118,147,155,156,157,158,159,173,199,200,204,205,206,207,260,261,263,264,265,266,267,268,269,270,285,286,287,288,289,324,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,346,347,379,380,396,],[-256,-41,-42,-43,-45,-48,-49,-50,-151,-150,-152,-153,-222,-223,-224,-225,-181,-167,-168,-163,-164,-161,-162,-171,-227,-228,-229,-230,-231,-232,-239,-240,-241,-242,-243,-244,-251,-252,-192,-169,-170,-165,-166,-198,-205,-206,-211,-212,-214,-173,-174,205,-226,-175,-150,-151,-152,-153,-156,-204,-172,289,-217,-219,-221,-44,-213,328,-55,-56,-46,-47,-180,-191,-197,-207,344,-178,-179,-216,-93,-233,-234,-235,-236,-237,-238,-245,-246,-247,-248,-249,-250,-253,-254,-176,-218,-220,-54,-177,420,]),'S_SEMI_COLON':([11,31,33,34,38,39,40,41,42,43,44,45,46,47,48,50,53,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,108,110,112,113,114,115,116,117,121,122,147,155,156,157,158,159,173,199,200,205,211,225,226,227,228,229,230,231,232,233,234,235,237,238,244,245,248,249,253,254,255,260,261,266,267,268,269,270,285,288,289,292,293,306,308,311,313,324,326,327,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,359,360,391,392,394,395,398,399,400,401,402,404,421,428,436,440,],[-256,143,-98,-99,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-51,-45,-48,-49,-50,-151,-150,-152,-153,-222,-223,-224,-225,-181,-167,-168,-163,-164,-161,-162,-171,-227,-228,-229,-230,-231,-232,-239,-240,-241,-242,-243,-244,-251,-252,-192,-169,-170,-165,-166,-198,-205,-206,-211,-212,-214,-173,-174,209,-83,-226,-175,-150,-151,-152,-153,-156,-204,-172,-217,-84,307,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-115,-117,-139,-140,-121,-122,-96,-97,-60,-44,-213,-46,-47,-180,-191,-197,-207,-179,-216,-81,-82,-101,-103,-131,-138,-93,-52,-57,-233,-234,-235,-236,-237,-238,-245,-246,-247,-248,-249,-250,-253,-254,-176,-102,-114,-116,-136,-145,-147,-141,-142,-143,-144,-123,-127,-146,-137,-132,307,]),'RW_TYPE':([11,25,38,39,40,41,42,43,44,45,46,47,48,50,53,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,108,110,112,113,114,115,116,117,126,127,128,129,147,155,156,157,158,159,173,199,200,205,215,216,218,260,261,266,267,268,269,270,285,288,289,299,302,304,324,326,327,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,357,358,384,385,386,409,410,411,412,413,424,],[-256,-255,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-51,-45,-48,-49,-50,-151,-150,-152,-153,-222,-223,-224,-225,-181,-167,-168,-163,-164,-161,-162,-171,-227,-228,-229,-230,-231,-232,-239,-240,-241,-242,-243,-244,-251,-252,-192,-169,-170,-165,-166,-198,-205,-206,-211,-212,-214,-173,-174,217,-11,-12,-64,-226,-175,-150,-151,-152,-153,-156,-204,-172,-217,217,-67,-63,-44,-213,-46,-47,-180,-191,-197,-207,-179,-216,-66,-255,-255,-93,-52,-57,-233,-234,-235,-236,-237,-238,-245,-246,-247,-248,-249,-250,-253,-254,-176,217,217,-68,-69,-70,-65,-154,-155,-157,-158,-71,]),'RW_IF':([11,61,62,63,64,65,66,67,68,69,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,108,110,112,113,114,115,116,117,141,147,155,156,157,158,159,199,200,205,225,226,227,228,229,230,231,232,233,234,235,237,238,244,245,248,249,261,268,269,270,285,288,289,306,307,308,311,313,324,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,359,360,391,392,394,395,398,399,400,401,402,404,421,428,436,439,440,],[-256,-222,-223,-224,-225,-181,-167,-168,-163,-164,-161,-162,-171,-227,-228,-229,-230,-231,-232,-239,-240,-241,-242,-243,-244,-251,-252,-192,-169,-170,-165,-166,-198,-205,-206,-211,-212,-214,-173,-174,240,-226,-175,-150,-151,-152,-153,-204,-172,-217,240,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-115,-117,-139,-140,-121,-122,-213,-180,-191,-197,-207,-179,-216,-101,240,-103,-131,-138,-93,-233,-234,-235,-236,-237,-238,-245,-246,-247,-248,-249,-250,-253,-254,-176,-102,-114,-116,-136,-145,-147,-141,-142,-143,-144,-123,-127,-146,-137,-132,240,240,]),'RW_DEPEND':([11,61,62,63,64,65,66,67,68,69,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,108,110,112,113,114,115,116,117,141,147,155,156,157,158,159,199,200,205,225,226,227,228,229,230,231,232,233,234,235,237,238,244,245,248,249,261,268,269,270,285,288,289,306,307,308,311,313,324,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,359,360,391,392,394,395,398,399,400,401,402,404,421,428,436,439,440,],[-256,-222,-223,-224,-225,-181,-167,-168,-163,-164,-161,-162,-171,-227,-228,-229,-230,-231,-232,-239,-240,-241,-242,-243,-244,-251,-252,-192,-169,-170,-165,-166,-198,-205,-206,-211,-212,-214,-173,-174,241,-226,-175,-150,-151,-152,-153,-204,-172,-217,241,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-115,-117,-139,-140,-121,-122,-213,-180,-191,-197,-207,-179,-216,-101,241,-103,-131,-138,-93,-233,-234,-235,-236,-237,-238,-245,-246,-247,-248,-249,-250,-253,-254,-176,-102,-114,-116,-136,-145,-147,-141,-142,-143,-144,-123,-127,-146,-137,-132,241,241,]),'RW_WHILE':([11,61,62,63,64,65,66,67,68,69,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,108,110,112,113,114,115,116,117,141,147,155,156,157,158,159,199,200,205,225,226,227,228,229,230,231,232,233,234,235,237,238,244,245,248,249,261,268,269,270,285,288,289,306,307,308,311,313,324,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,359,360,391,392,394,395,398,399,400,401,402,404,421,428,436,439,440,],[-256,-222,-223,-224,-225,-181,-167,-168,-163,-164,-161,-162,-171,-227,-228,-229,-230,-231,-232,-239,-240,-241,-242,-243,-244,-251,-252,-192,-169,-170,-165,-166,-198,-205,-206,-211,-212,-214,-173,-174,242,-226,-175,-150,-151,-152,-153,-204,-172,-217,242,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-115,-117,-139,-140,-121,-122,-213,-180,-191,-197,-207,-179,-216,-101,242,-103,-131,-138,-93,-233,-234,-235,-236,-237,-238,-245,-246,-247,-248,-249,-250,-253,-254,-176,-102,-114,-116,-136,-145,-147,-141,-142,-143,-144,-123,-127,-146,-137,-132,242,242,]),'RW_ITERATE':([11,61,62,63,64,65,66,67,68,69,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,108,110,112,113,114,115,116,117,141,147,155,156,157,158,159,199,200,205,225,226,227,228,229,230,231,232,233,234,235,237,238,244,245,248,249,261,268,269,270,285,288,289,306,307,308,311,313,324,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,359,360,391,392,394,395,398,399,400,401,402,404,421,428,436,439,440,],[-256,-222,-223,-224,-225,-181,-167,-168,-163,-164,-161,-162,-171,-227,-228,-229,-230,-231,-232,-239,-240,-241,-242,-243,-244,-251,-252,-192,-169,-170,-165,-166,-198,-205,-206,-211,-212,-214,-173,-174,246,-226,-175,-150,-151,-152,-153,-204,-172,-217,246,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-115,-117,-139,-140,-121,-122,-213,-180,-191,-197,-207,-179,-216,-101,246,-103,-131,-138,-93,-233,-234,-235,-236,-237,-238,-245,-246,-247,-248,-249,-250,-253,-254,-176,-102,-114,-116,-136,-145,-147,-141,-142,-143,-144,-123,-127,-146,-137,-132,246,246,]),'RW_REPEAT':([11,61,62,63,64,65,66,67,68,69,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,108,110,112,113,114,115,116,117,141,147,155,156,157,158,159,199,200,205,225,226,227,228,229,230,231,232,233,234,235,237,238,244,245,248,249,261,268,269,270,285,288,289,306,307,308,311,313,324,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,359,360,391,392,394,395,398,399,400,401,402,404,421,428,436,439,440,],[-256,-222,-223,-224,-225,-181,-167,-168,-163,-164,-161,-162,-171,-227,-228,-229,-230,-231,-232,-239,-240,-241,-242,-243,-244,-251,-252,-192,-169,-170,-165,-166,-198,-205,-206,-211,-212,-214,-173,-174,250,-226,-175,-150,-151,-152,-153,-204,-172,-217,250,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-115,-117,-139,-140,-121,-122,-213,-180,-191,-197,-207,-179,-216,-101,250,-103,-131,-138,-93,-233,-234,-235,-236,-237,-238,-245,-246,-247,-248,-249,-250,-253,-254,-176,-102,-114,-116,-136,-145,-147,-141,-142,-143,-144,-123,-127,-146,-137,-132,250,250,]),'RW_INPUT':([11,21,61,62,63,64,65,66,67,68,69,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,108,110,112,113,114,115,116,117,141,147,155,156,157,158,159,199,200,205,209,210,225,226,227,228,229,230,231,232,233,234,235,237,238,244,245,248,249,261,268,269,270,285,288,289,306,307,308,311,313,324,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,359,360,391,392,394,395,398,399,400,401,402,404,421,428,436,439,440,],[-256,124,-222,-223,-224,-225,-181,-167,-168,-163,-164,-161,-162,-171,-227,-228,-229,-230,-231,-232,-239,-240,-241,-242,-243,-244,-251,-252,-192,-169,-170,-165,-166,-198,-205,-206,-211,-212,-214,-173,-174,251,-226,-175,-150,-151,-152,-153,-204,-172,-217,124,124,251,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-115,-117,-139,-140,-121,-122,-213,-180,-191,-197,-207,-179,-216,-101,251,-103,-131,-138,-93,-233,-234,-235,-236,-237,-238,-245,-246,-247,-248,-249,-250,-253,-254,-176,-102,-114,-116,-136,-145,-147,-141,-142,-143,-144,-123,-127,-146,-137,-132,251,251,]),'RW_OUTPUT':([11,21,61,62,63,64,65,66,67,68,69,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,108,110,112,113,114,115,116,117,141,147,155,156,157,158,159,199,200,205,209,210,212,225,226,227,228,229,230,231,232,233,234,235,237,238,244,245,248,249,261,268,269,270,285,288,289,306,307,308,311,313,324,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,359,360,391,392,394,395,398,399,400,401,402,404,421,428,436,439,440,],[-256,125,-222,-223,-224,-225,-181,-167,-168,-163,-164,-161,-162,-171,-227,-228,-229,-230,-231,-232,-239,-240,-241,-242,-243,-244,-251,-252,-192,-169,-170,-165,-166,-198,-205,-206,-211,-212,-214,-173,-174,252,-226,-175,-150,-151,-152,-153,-204,-172,-217,125,125,294,252,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-115,-117,-139,-140,-121,-122,-213,-180,-191,-197,-207,-179,-216,-101,252,-103,-131,-138,-93,-233,-234,-235,-236,-237,-238,-245,-246,-247,-248,-249,-250,-253,-254,-176,-102,-114,-116,-136,-145,-147,-141,-142,-143,-144,-123,-127,-146,-137,-132,252,252,]),'RW_ABS':([11,19,49,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,108,109,110,111,112,113,114,115,116,117,118,141,145,147,148,149,153,154,155,156,157,158,159,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,205,225,226,227,228,229,230,231,232,233,234,235,237,238,239,240,242,244,245,248,249,250,261,262,268,269,270,285,288,289,290,291,301,306,307,308,309,310,311,313,322,323,324,325,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,355,359,360,363,366,367,368,391,392,394,395,398,399,400,401,402,403,404,405,421,428,429,433,434,436,437,439,440,441,],[-256,94,94,-222,-223,-224,-225,-181,-167,-168,-163,-164,-208,-209,-161,-162,-171,-227,-228,-229,-230,-231,-232,-239,-240,-241,-242,-243,-244,-251,-252,-192,-169,-170,-165,-166,-198,94,-205,-210,-206,-211,-212,-214,-173,-174,94,94,94,-226,94,94,-208,-209,-175,-150,-151,-152,-153,94,94,94,-182,-183,-184,-185,-186,-187,-188,-189,-190,94,-193,-194,-195,-196,94,-199,-200,-201,-202,-203,94,94,94,94,94,94,94,94,94,94,94,94,94,94,-204,-172,94,94,-217,94,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-115,-117,94,94,94,-139,-140,-121,-122,94,-213,94,-180,-191,-197,-207,-179,-216,94,94,94,-101,94,-103,94,94,-131,-138,94,94,-93,94,94,-233,-234,-235,-236,-237,-238,-245,-246,-247,-248,-249,-250,-253,-254,-176,94,94,-102,-114,94,94,94,94,-116,-136,-145,-147,-141,-142,-143,-144,-123,94,-127,94,-146,-137,94,94,-134,-132,-133,94,94,-135,]),'RW_SIN':([11,19,49,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,108,109,110,111,112,113,114,115,116,117,118,141,145,147,148,149,153,154,155,156,157,158,159,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,205,225,226,227,228,229,230,231,232,233,234,235,237,238,239,240,242,244,245,248,249,250,261,262,268,269,270,285,288,289,290,291,301,306,307,308,309,310,311,313,322,323,324,325,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,355,359,360,363,366,367,368,391,392,394,395,398,399,400,401,402,403,404,405,421,428,429,433,434,436,437,439,440,441,],[-256,95,95,-222,-223,-224,-225,-181,-167,-168,-163,-164,-208,-209,-161,-162,-171,-227,-228,-229,-230,-231,-232,-239,-240,-241,-242,-243,-244,-251,-252,-192,-169,-170,-165,-166,-198,95,-205,-210,-206,-211,-212,-214,-173,-174,95,95,95,-226,95,95,-208,-209,-175,-150,-151,-152,-153,95,95,95,-182,-183,-184,-185,-186,-187,-188,-189,-190,95,-193,-194,-195,-196,95,-199,-200,-201,-202,-203,95,95,95,95,95,95,95,95,95,95,95,95,95,95,-204,-172,95,95,-217,95,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-115,-117,95,95,95,-139,-140,-121,-122,95,-213,95,-180,-191,-197,-207,-179,-216,95,95,95,-101,95,-103,95,95,-131,-138,95,95,-93,95,95,-233,-234,-235,-236,-237,-238,-245,-246,-247,-248,-249,-250,-253,-254,-176,95,95,-102,-114,95,95,95,95,-116,-136,-145,-147,-141,-142,-143,-144,-123,95,-127,95,-146,-137,95,95,-134,-132,-133,95,95,-135,]),'RW_COS':([11,19,49,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,108,109,110,111,112,113,114,115,116,117,118,141,145,147,148,149,153,154,155,156,157,158,159,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,205,225,226,227,228,229,230,231,232,233,234,235,237,238,239,240,242,244,245,248,249,250,261,262,268,269,270,285,288,289,290,291,301,306,307,308,309,310,311,313,322,323,324,325,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,355,359,360,363,366,367,368,391,392,394,395,398,399,400,401,402,403,404,405,421,428,429,433,434,436,437,439,440,441,],[-256,96,96,-222,-223,-224,-225,-181,-167,-168,-163,-164,-208,-209,-161,-162,-171,-227,-228,-229,-230,-231,-232,-239,-240,-241,-242,-243,-244,-251,-252,-192,-169,-170,-165,-166,-198,96,-205,-210,-206,-211,-212,-214,-173,-174,96,96,96,-226,96,96,-208,-209,-175,-150,-151,-152,-153,96,96,96,-182,-183,-184,-185,-186,-187,-188,-189,-190,96,-193,-194,-195,-196,96,-199,-200,-201,-202,-203,96,96,96,96,96,96,96,96,96,96,96,96,96,96,-204,-172,96,96,-217,96,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-115,-117,96,96,96,-139,-140,-121,-122,96,-213,96,-180,-191,-197,-207,-179,-216,96,96,96,-101,96,-103,96,96,-131,-138,96,96,-93,96,96,-233,-234,-235,-236,-237,-238,-245,-246,-247,-248,-249,-250,-253,-254,-176,96,96,-102,-114,96,96,96,96,-116,-136,-145,-147,-141,-142,-143,-144,-123,96,-127,96,-146,-137,96,96,-134,-132,-133,96,96,-135,]),'RW_TAN':([11,19,49,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,108,109,110,111,112,113,114,115,116,117,118,141,145,147,148,149,153,154,155,156,157,158,159,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,205,225,226,227,228,229,230,231,232,233,234,235,237,238,239,240,242,244,245,248,249,250,261,262,268,269,270,285,288,289,290,291,301,306,307,308,309,310,311,313,322,323,324,325,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,355,359,360,363,366,367,368,391,392,394,395,398,399,400,401,402,403,404,405,421,428,429,433,434,436,437,439,440,441,],[-256,97,97,-222,-223,-224,-225,-181,-167,-168,-163,-164,-208,-209,-161,-162,-171,-227,-228,-229,-230,-231,-232,-239,-240,-241,-242,-243,-244,-251,-252,-192,-169,-170,-165,-166,-198,97,-205,-210,-206,-211,-212,-214,-173,-174,97,97,97,-226,97,97,-208,-209,-175,-150,-151,-152,-153,97,97,97,-182,-183,-184,-185,-186,-187,-188,-189,-190,97,-193,-194,-195,-196,97,-199,-200,-201,-202,-203,97,97,97,97,97,97,97,97,97,97,97,97,97,97,-204,-172,97,97,-217,97,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-115,-117,97,97,97,-139,-140,-121,-122,97,-213,97,-180,-191,-197,-207,-179,-216,97,97,97,-101,97,-103,97,97,-131,-138,97,97,-93,97,97,-233,-234,-235,-236,-237,-238,-245,-246,-247,-248,-249,-250,-253,-254,-176,97,97,-102,-114,97,97,97,97,-116,-136,-145,-147,-141,-142,-143,-144,-123,97,-127,97,-146,-137,97,97,-134,-132,-133,97,97,-135,]),'RW_SUCC':([11,19,49,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,108,109,110,111,112,113,114,115,116,117,118,141,145,147,148,149,153,154,155,156,157,158,159,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,205,225,226,227,228,229,230,231,232,233,234,235,237,238,239,240,242,244,245,248,249,250,261,262,268,269,270,285,288,289,290,291,301,306,307,308,309,310,311,313,322,323,324,325,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,355,359,360,363,366,367,368,391,392,394,395,398,399,400,401,402,403,404,405,421,428,429,433,434,436,437,439,440,441,],[-256,98,98,-222,-223,-224,-225,-181,-167,-168,-163,-164,-208,-209,-161,-162,-171,-227,-228,-229,-230,-231,-232,-239,-240,-241,-242,-243,-244,-251,-252,-192,-169,-170,-165,-166,-198,98,-205,-210,-206,-211,-212,-214,-173,-174,98,98,98,-226,98,98,-208,-209,-175,-150,-151,-152,-153,98,98,98,-182,-183,-184,-185,-186,-187,-188,-189,-190,98,-193,-194,-195,-196,98,-199,-200,-201,-202,-203,98,98,98,98,98,98,98,98,98,98,98,98,98,98,-204,-172,98,98,-217,98,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-115,-117,98,98,98,-139,-140,-121,-122,98,-213,98,-180,-191,-197,-207,-179,-216,98,98,98,-101,98,-103,98,98,-131,-138,98,98,-93,98,98,-233,-234,-235,-236,-237,-238,-245,-246,-247,-248,-249,-250,-253,-254,-176,98,98,-102,-114,98,98,98,98,-116,-136,-145,-147,-141,-142,-143,-144,-123,98,-127,98,-146,-137,98,98,-134,-132,-133,98,98,-135,]),'RW_PRED':([11,19,49,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,108,109,110,111,112,113,114,115,116,117,118,141,145,147,148,149,153,154,155,156,157,158,159,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,205,225,226,227,228,229,230,231,232,233,234,235,237,238,239,240,242,244,245,248,249,250,261,262,268,269,270,285,288,289,290,291,301,306,307,308,309,310,311,313,322,323,324,325,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,355,359,360,363,366,367,368,391,392,394,395,398,399,400,401,402,403,404,405,421,428,429,433,434,436,437,439,440,441,],[-256,99,99,-222,-223,-224,-225,-181,-167,-168,-163,-164,-208,-209,-161,-162,-171,-227,-228,-229,-230,-231,-232,-239,-240,-241,-242,-243,-244,-251,-252,-192,-169,-170,-165,-166,-198,99,-205,-210,-206,-211,-212,-214,-173,-174,99,99,99,-226,99,99,-208,-209,-175,-150,-151,-152,-153,99,99,99,-182,-183,-184,-185,-186,-187,-188,-189,-190,99,-193,-194,-195,-196,99,-199,-200,-201,-202,-203,99,99,99,99,99,99,99,99,99,99,99,99,99,99,-204,-172,99,99,-217,99,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-115,-117,99,99,99,-139,-140,-121,-122,99,-213,99,-180,-191,-197,-207,-179,-216,99,99,99,-101,99,-103,99,99,-131,-138,99,99,-93,99,99,-233,-234,-235,-236,-237,-238,-245,-246,-247,-248,-249,-250,-253,-254,-176,99,99,-102,-114,99,99,99,99,-116,-136,-145,-147,-141,-142,-143,-144,-123,99,-127,99,-146,-137,99,99,-134,-132,-133,99,99,-135,]),'RW_AWAL':([11,19,49,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,108,109,110,111,112,113,114,115,116,117,118,141,145,147,148,149,153,154,155,156,157,158,159,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,205,225,226,227,228,229,230,231,232,233,234,235,237,238,239,240,242,244,245,248,249,250,261,262,268,269,270,285,288,289,290,291,301,306,307,308,309,310,311,313,322,323,324,325,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,355,359,360,363,366,367,368,391,392,394,395,398,399,400,401,402,403,404,405,421,428,429,433,434,436,437,439,440,441,],[-256,100,100,-222,-223,-224,-225,-181,-167,-168,-163,-164,-208,-209,-161,-162,-171,-227,-228,-229,-230,-231,-232,-239,-240,-241,-242,-243,-244,-251,-252,-192,-169,-170,-165,-166,-198,100,-205,-210,-206,-211,-212,-214,-173,-174,100,100,100,-226,100,100,-208,-209,-175,-150,-151,-152,-153,100,100,100,-182,-183,-184,-185,-186,-187,-188,-189,-190,100,-193,-194,-195,-196,100,-199,-200,-201,-202,-203,100,100,100,100,100,100,100,100,100,100,100,100,100,100,-204,-172,100,100,-217,100,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-115,-117,100,100,100,-139,-140,-121,-122,100,-213,100,-180,-191,-197,-207,-179,-216,100,100,100,-101,100,-103,100,100,-131,-138,100,100,-93,100,100,-233,-234,-235,-236,-237,-238,-245,-246,-247,-248,-249,-250,-253,-254,-176,100,100,-102,-114,100,100,100,100,-116,-136,-145,-147,-141,-142,-143,-144,-123,100,-127,100,-146,-137,100,100,-134,-132,-133,100,100,-135,]),'RW_AKHIR':([11,19,49,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,108,109,110,111,112,113,114,115,116,117,118,141,145,147,148,149,153,154,155,156,157,158,159,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,205,225,226,227,228,229,230,231,232,233,234,235,237,238,239,240,242,244,245,248,249,250,261,262,268,269,270,285,288,289,290,291,301,306,307,308,309,310,311,313,322,323,324,325,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,355,359,360,363,366,367,368,391,392,394,395,398,399,400,401,402,403,404,405,421,428,429,433,434,436,437,439,440,441,],[-256,101,101,-222,-223,-224,-225,-181,-167,-168,-163,-164,-208,-209,-161,-162,-171,-227,-228,-229,-230,-231,-232,-239,-240,-241,-242,-243,-244,-251,-252,-192,-169,-170,-165,-166,-198,101,-205,-210,-206,-211,-212,-214,-173,-174,101,101,101,-226,101,101,-208,-209,-175,-150,-151,-152,-153,101,101,101,-182,-183,-184,-185,-186,-187,-188,-189,-190,101,-193,-194,-195,-196,101,-199,-200,-201,-202,-203,101,101,101,101,101,101,101,101,101,101,101,101,101,101,-204,-172,101,101,-217,101,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-115,-117,101,101,101,-139,-140,-121,-122,101,-213,101,-180,-191,-197,-207,-179,-216,101,101,101,-101,101,-103,101,101,-131,-138,101,101,-93,101,101,-233,-234,-235,-236,-237,-238,-245,-246,-247,-248,-249,-250,-253,-254,-176,101,101,-102,-114,101,101,101,101,-116,-136,-145,-147,-141,-142,-143,-144,-123,101,-127,101,-146,-137,101,101,-134,-132,-133,101,101,-135,]),'RW_FIRSTCHAR':([11,19,49,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,108,109,110,111,112,113,114,115,116,117,118,141,145,147,148,149,153,154,155,156,157,158,159,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,205,225,226,227,228,229,230,231,232,233,234,235,237,238,239,240,242,244,245,248,249,250,261,262,268,269,270,285,288,289,290,291,301,306,307,308,309,310,311,313,322,323,324,325,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,355,359,360,363,366,367,368,391,392,394,395,398,399,400,401,402,403,404,405,421,428,429,433,434,436,437,439,440,441,],[-256,102,102,-222,-223,-224,-225,-181,-167,-168,-163,-164,-208,-209,-161,-162,-171,-227,-228,-229,-230,-231,-232,-239,-240,-241,-242,-243,-244,-251,-252,-192,-169,-170,-165,-166,-198,102,-205,-210,-206,-211,-212,-214,-173,-174,102,102,102,-226,102,102,-208,-209,-175,-150,-151,-152,-153,102,102,102,-182,-183,-184,-185,-186,-187,-188,-189,-190,102,-193,-194,-195,-196,102,-199,-200,-201,-202,-203,102,102,102,102,102,102,102,102,102,102,102,102,102,102,-204,-172,102,102,-217,102,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-115,-117,102,102,102,-139,-140,-121,-122,102,-213,102,-180,-191,-197,-207,-179,-216,102,102,102,-101,102,-103,102,102,-131,-138,102,102,-93,102,102,-233,-234,-235,-236,-237,-238,-245,-246,-247,-248,-249,-250,-253,-254,-176,102,102,-102,-114,102,102,102,102,-116,-136,-145,-147,-141,-142,-143,-144,-123,102,-127,102,-146,-137,102,102,-134,-132,-133,102,102,-135,]),'RW_LASTCHAR':([11,19,49,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,108,109,110,111,112,113,114,115,116,117,118,141,145,147,148,149,153,154,155,156,157,158,159,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,205,225,226,227,228,229,230,231,232,233,234,235,237,238,239,240,242,244,245,248,249,250,261,262,268,269,270,285,288,289,290,291,301,306,307,308,309,310,311,313,322,323,324,325,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,355,359,360,363,366,367,368,391,392,394,395,398,399,400,401,402,403,404,405,421,428,429,433,434,436,437,439,440,441,],[-256,103,103,-222,-223,-224,-225,-181,-167,-168,-163,-164,-208,-209,-161,-162,-171,-227,-228,-229,-230,-231,-232,-239,-240,-241,-242,-243,-244,-251,-252,-192,-169,-170,-165,-166,-198,103,-205,-210,-206,-211,-212,-214,-173,-174,103,103,103,-226,103,103,-208,-209,-175,-150,-151,-152,-153,103,103,103,-182,-183,-184,-185,-186,-187,-188,-189,-190,103,-193,-194,-195,-196,103,-199,-200,-201,-202,-203,103,103,103,103,103,103,103,103,103,103,103,103,103,103,-204,-172,103,103,-217,103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-115,-117,103,103,103,-139,-140,-121,-122,103,-213,103,-180,-191,-197,-207,-179,-216,103,103,103,-101,103,-103,103,103,-131,-138,103,103,-93,103,103,-233,-234,-235,-236,-237,-238,-245,-246,-247,-248,-249,-250,-253,-254,-176,103,103,-102,-114,103,103,103,103,-116,-136,-145,-147,-141,-142,-143,-144,-123,103,-127,103,-146,-137,103,103,-134,-132,-133,103,103,-135,]),'RW_LONG':([11,19,49,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,108,109,110,111,112,113,114,115,116,117,118,141,145,147,148,149,153,154,155,156,157,158,159,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,205,225,226,227,228,229,230,231,232,233,234,235,237,238,239,240,242,244,245,248,249,250,261,262,268,269,270,285,288,289,290,291,301,306,307,308,309,310,311,313,322,323,324,325,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,355,359,360,363,366,367,368,391,392,394,395,398,399,400,401,402,403,404,405,421,428,429,433,434,436,437,439,440,441,],[-256,104,104,-222,-223,-224,-225,-181,-167,-168,-163,-164,-208,-209,-161,-162,-171,-227,-228,-229,-230,-231,-232,-239,-240,-241,-242,-243,-244,-251,-252,-192,-169,-170,-165,-166,-198,104,-205,-210,-206,-211,-212,-214,-173,-174,104,104,104,-226,104,104,-208,-209,-175,-150,-151,-152,-153,104,104,104,-182,-183,-184,-185,-186,-187,-188,-189,-190,104,-193,-194,-195,-196,104,-199,-200,-201,-202,-203,104,104,104,104,104,104,104,104,104,104,104,104,104,104,-204,-172,104,104,-217,104,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-115,-117,104,104,104,-139,-140,-121,-122,104,-213,104,-180,-191,-197,-207,-179,-216,104,104,104,-101,104,-103,104,104,-131,-138,104,104,-93,104,104,-233,-234,-235,-236,-237,-238,-245,-246,-247,-248,-249,-250,-253,-254,-176,104,104,-102,-114,104,104,104,104,-116,-136,-145,-147,-141,-142,-143,-144,-123,104,-127,104,-146,-137,104,104,-134,-132,-133,104,104,-135,]),'RW_ISKOSONG':([11,19,49,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,108,109,110,111,112,113,114,115,116,117,118,141,145,147,148,149,153,154,155,156,157,158,159,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,205,225,226,227,228,229,230,231,232,233,234,235,237,238,239,240,242,244,245,248,249,250,261,262,268,269,270,285,288,289,290,291,301,306,307,308,309,310,311,313,322,323,324,325,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,355,359,360,363,366,367,368,391,392,394,395,398,399,400,401,402,403,404,405,421,428,429,433,434,436,437,439,440,441,],[-256,105,105,-222,-223,-224,-225,-181,-167,-168,-163,-164,-208,-209,-161,-162,-171,-227,-228,-229,-230,-231,-232,-239,-240,-241,-242,-243,-244,-251,-252,-192,-169,-170,-165,-166,-198,105,-205,-210,-206,-211,-212,-214,-173,-174,105,105,105,-226,105,105,-208,-209,-175,-150,-151,-152,-153,105,105,105,-182,-183,-184,-185,-186,-187,-188,-189,-190,105,-193,-194,-195,-196,105,-199,-200,-201,-202,-203,105,105,105,105,105,105,105,105,105,105,105,105,105,105,-204,-172,105,105,-217,105,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-115,-117,105,105,105,-139,-140,-121,-122,105,-213,105,-180,-191,-197,-207,-179,-216,105,105,105,-101,105,-103,105,105,-131,-138,105,105,-93,105,105,-233,-234,-235,-236,-237,-238,-245,-246,-247,-248,-249,-250,-253,-254,-176,105,105,-102,-114,105,105,105,105,-116,-136,-145,-147,-141,-142,-143,-144,-123,105,-127,105,-146,-137,105,105,-134,-132,-133,105,105,-135,]),'RW_INTEGERTOREAL':([11,19,49,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,108,109,110,111,112,113,114,115,116,117,118,141,145,147,148,149,153,154,155,156,157,158,159,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,205,225,226,227,228,229,230,231,232,233,234,235,237,238,239,240,242,244,245,248,249,250,261,262,268,269,270,285,288,289,290,291,301,306,307,308,309,310,311,313,322,323,324,325,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,355,359,360,363,366,367,368,391,392,394,395,398,399,400,401,402,403,404,405,421,428,429,433,434,436,437,439,440,441,],[-256,106,106,-222,-223,-224,-225,-181,-167,-168,-163,-164,-208,-209,-161,-162,-171,-227,-228,-229,-230,-231,-232,-239,-240,-241,-242,-243,-244,-251,-252,-192,-169,-170,-165,-166,-198,106,-205,-210,-206,-211,-212,-214,-173,-174,106,106,106,-226,106,106,-208,-209,-175,-150,-151,-152,-153,106,106,106,-182,-183,-184,-185,-186,-187,-188,-189,-190,106,-193,-194,-195,-196,106,-199,-200,-201,-202,-203,106,106,106,106,106,106,106,106,106,106,106,106,106,106,-204,-172,106,106,-217,106,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-115,-117,106,106,106,-139,-140,-121,-122,106,-213,106,-180,-191,-197,-207,-179,-216,106,106,106,-101,106,-103,106,106,-131,-138,106,106,-93,106,106,-233,-234,-235,-236,-237,-238,-245,-246,-247,-248,-249,-250,-253,-254,-176,106,106,-102,-114,106,106,106,106,-116,-136,-145,-147,-141,-142,-143,-144,-123,106,-127,106,-146,-137,106,106,-134,-132,-133,106,106,-135,]),'RW_REALTOINTEGER':([11,19,49,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,108,109,110,111,112,113,114,115,116,117,118,141,145,147,148,149,153,154,155,156,157,158,159,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,205,225,226,227,228,229,230,231,232,233,234,235,237,238,239,240,242,244,245,248,249,250,261,262,268,269,270,285,288,289,290,291,301,306,307,308,309,310,311,313,322,323,324,325,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,355,359,360,363,366,367,368,391,392,394,395,398,399,400,401,402,403,404,405,421,428,429,433,434,436,437,439,440,441,],[-256,107,107,-222,-223,-224,-225,-181,-167,-168,-163,-164,-208,-209,-161,-162,-171,-227,-228,-229,-230,-231,-232,-239,-240,-241,-242,-243,-244,-251,-252,-192,-169,-170,-165,-166,-198,107,-205,-210,-206,-211,-212,-214,-173,-174,107,107,107,-226,107,107,-208,-209,-175,-150,-151,-152,-153,107,107,107,-182,-183,-184,-185,-186,-187,-188,-189,-190,107,-193,-194,-195,-196,107,-199,-200,-201,-202,-203,107,107,107,107,107,107,107,107,107,107,107,107,107,107,-204,-172,107,107,-217,107,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-115,-117,107,107,107,-139,-140,-121,-122,107,-213,107,-180,-191,-197,-207,-179,-216,107,107,107,-101,107,-103,107,107,-131,-138,107,107,-93,107,107,-233,-234,-235,-236,-237,-238,-245,-246,-247,-248,-249,-250,-253,-254,-176,107,107,-102,-114,107,107,107,107,-116,-136,-145,-147,-141,-142,-143,-144,-123,107,-127,107,-146,-137,107,107,-134,-132,-133,107,107,-135,]),'RW_THEN':([11,61,62,63,64,65,66,67,68,69,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,108,110,112,113,114,115,116,117,147,155,156,157,158,159,199,200,205,261,268,269,270,285,288,289,312,313,324,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,],[-256,-222,-223,-224,-225,-181,-167,-168,-163,-164,-161,-162,-171,-227,-228,-229,-230,-231,-232,-239,-240,-241,-242,-243,-244,-251,-252,-192,-169,-170,-165,-166,-198,-205,-206,-211,-212,-214,-173,-174,-226,-175,-150,-151,-152,-153,-204,-172,-217,-213,-180,-191,-197,-207,-179,-216,362,-138,-93,-233,-234,-235,-236,-237,-238,-245,-246,-247,-248,-249,-250,-253,-254,-176,]),'RW_DO':([11,61,62,63,64,65,66,67,68,69,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,108,110,112,113,114,115,116,117,147,155,156,157,158,159,199,200,205,261,268,269,270,285,288,289,313,315,324,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,],[-256,-222,-223,-224,-225,-181,-167,-168,-163,-164,-161,-162,-171,-227,-228,-229,-230,-231,-232,-239,-240,-241,-242,-243,-244,-251,-252,-192,-169,-170,-165,-166,-198,-205,-206,-211,-212,-214,-173,-174,-226,-175,-150,-151,-152,-153,-204,-172,-217,-213,-180,-191,-197,-207,-179,-216,-138,364,-93,-233,-234,-235,-236,-237,-238,-245,-246,-247,-248,-249,-250,-253,-254,-176,]),'INDENT':([11,13,14,27,28,61,62,63,64,65,66,67,68,69,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,108,110,112,113,114,115,116,117,147,155,156,157,158,159,199,200,205,222,224,246,250,261,268,269,270,285,288,289,313,324,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,362,364,365,369,370,371,397,418,419,420,438,],[-256,25,-7,141,-8,-222,-223,-224,-225,-181,-167,-168,-163,-164,-161,-162,-171,-227,-228,-229,-230,-231,-232,-239,-240,-241,-242,-243,-244,-251,-252,-192,-169,-170,-165,-166,-198,-205,-206,-211,-212,-214,-173,-174,-226,-175,-150,-151,-152,-153,-204,-172,-217,302,304,141,141,-213,-180,-191,-197,-207,-179,-216,-138,-93,-233,-234,-235,-236,-237,-238,-245,-246,-247,-248,-249,-250,-253,-254,-176,141,141,141,141,141,141,141,141,429,-148,439,]),'S_ASSIGNMENT':([11,61,62,63,64,75,76,77,78,79,80,81,82,83,84,85,86,87,88,116,117,147,236,238,247,288,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,391,],[-256,-222,-223,-224,-225,-227,-228,-229,-230,-231,-232,-239,-240,-241,-242,-243,-244,-251,-252,-173,-174,-226,309,-172,-175,-179,-233,-234,-235,-236,-237,-238,-245,-246,-247,-248,-249,-250,-253,-254,-176,-93,]),'RW_TRAVERSAL':([11,238,243,],[-256,-149,316,]),'RW_TIMES':([11,61,62,63,64,75,76,77,78,79,80,81,82,83,84,85,86,87,88,92,116,117,147,200,288,319,320,321,324,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,],[-256,-222,-223,-224,-225,-227,-228,-229,-230,-231,-232,-239,-240,-241,-242,-243,-244,-251,-252,-165,-173,-174,-226,-172,-179,369,370,371,-93,-233,-234,-235,-236,-237,-238,-245,-246,-247,-248,-249,-250,-253,-254,-176,]),'RW_ALGORITMA':([13,14,28,222,224,348,349,382,426,427,],[27,-7,-8,27,27,27,-17,-18,27,27,]),'RW_LOKAL':([14,],[28,]),'RW_INTEGER':([19,145,262,301,355,],[40,40,40,40,40,]),'RW_REAL':([19,145,262,301,355,],[41,41,41,41,41,]),'RW_STRING':([19,145,262,301,355,],[42,42,42,42,42,]),'RW_CHARACTER':([19,145,262,301,355,],[43,43,43,43,43,]),'RW_BOOLEAN':([19,145,262,301,355,],[44,44,44,44,44,]),'RW_ARRAY':([19,145,262,301,355,],[51,51,51,51,51,]),'L_BOOLEAN_TRUE':([19,49,70,71,109,111,118,145,148,149,153,154,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,201,202,239,240,242,262,290,291,301,309,310,323,325,329,345,355,366,367,368,388,405,429,433,434,437,441,],[72,72,-208,-209,72,-210,72,72,72,72,-208,-209,72,72,72,-182,-183,-184,-185,-186,-187,-188,-189,-190,72,-193,-194,-195,-196,72,-199,-200,-201,-202,-203,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,-134,-133,-135,]),'L_BOOLEAN_FALSE':([19,49,70,71,109,111,118,145,148,149,153,154,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,201,202,239,240,242,262,290,291,301,309,310,323,325,329,345,355,366,367,368,388,405,429,433,434,437,441,],[73,73,-208,-209,73,-210,73,73,73,73,-208,-209,73,73,73,-182,-183,-184,-185,-186,-187,-188,-189,-190,73,-193,-194,-195,-196,73,-199,-200,-201,-202,-203,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,-134,-133,-135,]),'L_NIL':([19,49,70,71,109,111,118,145,148,149,153,154,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,201,202,239,240,242,262,290,291,301,309,310,323,325,329,345,355,366,367,368,388,405,429,433,434,437,441,],[74,74,-208,-209,74,-210,74,74,74,74,-208,-209,74,74,74,-182,-183,-184,-185,-186,-187,-188,-189,-190,74,-193,-194,-195,-196,74,-199,-200,-201,-202,-203,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,-134,-133,-135,]),'L_STRING':([19,49,70,71,109,111,118,145,148,149,153,154,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,201,202,239,240,242,262,290,291,301,309,310,323,325,329,345,355,366,367,368,388,405,429,433,434,437,441,],[90,90,-208,-209,90,-210,90,90,90,90,-208,-209,90,90,90,-182,-183,-184,-185,-186,-187,-188,-189,-190,90,-193,-194,-195,-196,90,-199,-200,-201,-202,-203,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,-134,-133,-135,]),'L_CHARACTER':([19,49,70,71,109,111,118,145,148,149,153,154,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,201,202,239,240,242,262,290,291,301,309,310,323,325,329,345,355,366,367,368,388,405,429,433,434,437,441,],[91,91,-208,-209,91,-210,91,91,91,91,-208,-209,91,91,91,-182,-183,-184,-185,-186,-187,-188,-189,-190,91,-193,-194,-195,-196,91,-199,-200,-201,-202,-203,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,-134,-133,-135,]),'L_INTEGER_NUMBER':([19,49,58,70,71,109,111,118,145,148,149,153,154,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,201,202,239,240,242,250,262,290,291,301,309,310,323,325,329,345,355,366,367,368,388,405,414,415,429,433,434,437,441,],[92,92,92,-159,-160,92,-210,92,92,92,92,-208,-209,92,92,92,-182,-183,-184,-185,-186,-187,-188,-189,-190,92,-193,-194,-195,-196,92,-199,-200,-201,-202,-203,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,-159,-160,92,92,-134,-133,-135,]),'L_REAL_NUMBER':([19,49,58,70,71,109,111,118,145,148,149,153,154,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,201,202,239,240,242,262,290,291,301,309,310,323,325,329,345,355,366,367,368,388,405,414,415,429,433,434,437,441,],[93,93,93,-159,-160,93,-210,93,93,93,93,-208,-209,93,93,93,-182,-183,-184,-185,-186,-187,-188,-189,-190,93,-193,-194,-195,-196,93,-199,-200,-201,-202,-203,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,-159,-160,93,93,-134,-133,-135,]),'RW_NOT':([19,49,70,71,109,111,118,145,148,149,153,154,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,202,239,240,242,262,290,291,301,309,310,323,325,329,345,355,366,367,368,405,429,433,434,437,441,],[111,111,-208,-209,111,-210,111,111,111,111,-208,-209,111,111,111,-182,-183,-184,-185,-186,-187,-188,-189,-190,111,-193,-194,-195,-196,111,-199,-200,-201,-202,-203,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,-134,-133,-135,]),'RW_CONSTANT':([25,66,67,68,69,72,73,74,90,91,92,93,128,129,173,218,302,304,409,410,411,412,413,],[130,-167,-168,-163,-164,-161,-162,-171,-169,-170,-165,-166,130,-64,-156,-63,130,130,-65,-154,-155,-157,-158,]),'RW_OF':([160,328,],[262,-53,]),'RW_ON':([241,],[314,]),'RW_STOP':([306,317,],[-101,367,]),'RW_UNTIL':([306,318,],[-101,368,]),'RW_ELSE':([306,392,],[-101,418,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'file':([0,],[1,]),'program':([0,],[2,]),'function_declaration':([0,26,133,295,350,381,],[4,138,138,353,353,138,]),'procedure_declaration':([0,26,133,295,350,381,],[5,137,137,352,352,137,]),'function_identification':([0,26,133,295,350,381,],[6,6,6,6,6,6,]),'procedure_identifier':([0,26,133,295,350,381,],[7,7,7,7,7,7,]),'identifier':([3,8,9,18,19,49,109,118,123,130,141,143,144,145,146,148,149,161,162,163,174,179,185,186,187,188,189,190,191,192,193,194,195,196,197,198,201,202,203,213,217,225,239,240,242,250,262,290,291,297,301,307,309,310,322,323,325,329,345,355,363,366,367,368,387,389,390,403,405,425,429,433,439,440,],[10,22,23,36,47,152,200,200,36,219,238,36,36,47,256,200,200,47,267,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,288,36,300,238,200,200,200,200,47,200,200,36,47,238,200,200,200,200,200,47,200,47,200,267,200,200,36,36,36,200,200,36,200,200,238,238,]),'block':([4,5,10,],[12,15,24,]),'kamus_declaration':([4,5,10,137,138,],[13,13,13,222,224,]),'function_formal_parameter_list':([6,],[16,]),'function_return_type':([6,16,],[17,29,]),'formal_parameter_list':([7,],[20,]),'algorithm_block':([13,222,224,348,426,427,],[26,303,305,381,431,432,]),'function_parameter_list_option':([18,],[30,]),'function_parameter_list':([18,],[31,]),'empty':([18,21,25,26,126,213,302,304,357,358,381,389,390,],[32,120,127,132,214,296,127,127,214,214,132,296,296,]),'function_parameter_declaration':([18,143,144,],[33,253,254,]),'variable_sub_declaration':([18,123,143,144,213,297,387,389,390,425,],[34,211,34,34,298,354,408,298,298,408,]),'identifier_list':([18,49,123,143,144,213,297,387,389,390,425,],[35,150,35,35,35,35,35,35,35,35,35,]),'type_denoter':([19,145,262,301,355,],[37,255,327,356,385,]),'ordinal_type':([19,145,161,262,301,329,355,],[38,38,265,38,38,265,38,]),'structured_type':([19,145,262,301,355,],[39,39,39,39,39,]),'enumerated_type':([19,145,161,262,301,329,355,],[45,45,45,45,45,45,45,]),'subrange_type':([19,145,161,262,301,329,355,366,],[46,46,46,46,46,46,46,396,]),'array_type':([19,145,262,301,355,],[48,48,48,48,48,]),'subrange_type_option':([19,145,161,262,301,329,355,366,],[50,50,50,50,50,50,50,50,]),'subrange_option':([19,145,161,162,262,301,329,355,366,],[52,52,52,266,52,52,52,52,52,]),'constant':([19,145,161,162,262,301,329,355,366,388,],[53,53,53,53,53,53,53,53,53,409,]),'function_designator':([19,49,109,118,141,145,148,149,161,162,163,174,179,185,186,187,188,189,190,191,192,193,194,195,196,197,198,201,202,225,239,240,242,250,262,290,291,301,307,309,310,322,323,325,329,345,355,363,366,367,368,403,405,429,433,439,440,],[54,155,155,155,247,54,155,155,54,54,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,247,155,155,155,321,54,155,155,54,247,155,155,247,155,155,54,155,54,247,54,155,155,247,155,155,155,247,247,]),'expression':([19,49,118,145,148,149,161,162,185,186,187,188,189,190,191,192,193,194,195,196,197,198,202,239,240,242,262,290,291,301,309,310,323,325,329,345,355,366,367,368,405,429,433,],[55,151,207,55,259,151,55,55,271,272,273,274,275,276,277,278,279,280,281,282,283,284,287,311,313,313,55,207,347,55,360,259,377,259,55,380,55,55,313,313,377,435,435,]),'string_char_constant':([19,49,109,118,145,148,149,161,162,163,174,179,185,186,187,188,189,190,191,192,193,194,195,196,197,198,201,202,239,240,242,262,290,291,301,309,310,323,325,329,345,355,366,367,368,388,405,429,433,],[56,157,157,157,56,157,157,56,56,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,56,157,157,56,157,157,157,157,56,157,56,56,157,157,410,157,157,157,]),'non_string_constant':([19,49,58,109,118,145,148,149,161,162,163,174,179,185,186,187,188,189,190,191,192,193,194,195,196,197,198,201,202,239,240,242,262,290,291,301,309,310,323,325,329,345,355,366,367,368,388,405,429,433,],[57,156,173,156,156,57,156,156,57,57,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,57,156,156,57,156,156,156,156,57,156,57,57,156,156,411,156,156,156,]),'sign':([19,145,161,162,262,301,329,355,366,388,],[58,58,58,58,58,58,58,58,58,58,]),'boolean_constant':([19,49,109,118,145,148,149,161,162,163,174,179,185,186,187,188,189,190,191,192,193,194,195,196,197,198,201,202,239,240,242,262,290,291,301,309,310,323,325,329,345,355,366,367,368,388,405,429,433,],[59,158,158,158,59,158,158,59,59,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,59,158,158,59,158,158,158,158,59,158,59,59,158,158,412,158,158,158,]),'nil_constant':([19,49,109,118,145,148,149,161,162,163,174,179,185,186,187,188,189,190,191,192,193,194,195,196,197,198,201,202,239,240,242,262,290,291,301,309,310,323,325,329,345,355,366,367,368,388,405,429,433,],[60,159,159,159,60,159,159,60,60,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,60,159,159,60,159,159,159,159,60,159,60,60,159,159,413,159,159,159,]),'user_defined_function_call':([19,49,109,118,141,145,148,149,161,162,163,174,179,185,186,187,188,189,190,191,192,193,194,195,196,197,198,201,202,225,239,240,242,250,262,290,291,301,307,309,310,322,323,325,329,345,355,363,366,367,368,403,405,429,433,439,440,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'math_function_call':([19,49,109,118,141,145,148,149,161,162,163,174,179,185,186,187,188,189,190,191,192,193,194,195,196,197,198,201,202,225,239,240,242,250,262,290,291,301,307,309,310,322,323,325,329,345,355,363,366,367,368,403,405,429,433,439,440,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'string_function_call':([19,49,109,118,141,145,148,149,161,162,163,174,179,185,186,187,188,189,190,191,192,193,194,195,196,197,198,201,202,225,239,240,242,250,262,290,291,301,307,309,310,322,323,325,329,345,355,363,366,367,368,403,405,429,433,439,440,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'converter_function_call':([19,49,109,118,141,145,148,149,161,162,163,174,179,185,186,187,188,189,190,191,192,193,194,195,196,197,198,201,202,225,239,240,242,250,262,290,291,301,307,309,310,322,323,325,329,345,355,363,366,367,368,403,405,429,433,439,440,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'additive_expression':([19,49,118,145,148,149,161,162,163,185,186,187,188,189,190,191,192,193,194,195,196,197,198,202,239,240,242,262,290,291,301,309,310,323,325,329,345,355,366,367,368,405,429,433,],[65,65,65,65,65,65,65,65,268,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'string_constant':([19,49,109,118,145,148,149,161,162,163,174,179,185,186,187,188,189,190,191,192,193,194,195,196,197,198,201,202,239,240,242,262,290,291,301,309,310,323,325,329,345,355,366,367,368,388,405,429,433,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'char_constant':([19,49,109,118,145,148,149,161,162,163,174,179,185,186,187,188,189,190,191,192,193,194,195,196,197,198,201,202,239,240,242,262,290,291,301,309,310,323,325,329,345,355,366,367,368,388,405,429,433,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'integer_constant':([19,49,58,109,118,145,148,149,161,162,163,174,179,185,186,187,188,189,190,191,192,193,194,195,196,197,198,201,202,239,240,242,250,262,290,291,301,309,310,323,325,329,345,355,366,367,368,388,405,429,433,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,320,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'real_constant':([19,49,58,109,118,145,148,149,161,162,163,174,179,185,186,187,188,189,190,191,192,193,194,195,196,197,198,201,202,239,240,242,262,290,291,301,309,310,323,325,329,345,355,366,367,368,388,405,429,433,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'abs_function':([19,49,109,118,141,145,148,149,161,162,163,174,179,185,186,187,188,189,190,191,192,193,194,195,196,197,198,201,202,225,239,240,242,250,262,290,291,301,307,309,310,322,323,325,329,345,355,363,366,367,368,403,405,429,433,439,440,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'sin_function':([19,49,109,118,141,145,148,149,161,162,163,174,179,185,186,187,188,189,190,191,192,193,194,195,196,197,198,201,202,225,239,240,242,250,262,290,291,301,307,309,310,322,323,325,329,345,355,363,366,367,368,403,405,429,433,439,440,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'cos_function':([19,49,109,118,141,145,148,149,161,162,163,174,179,185,186,187,188,189,190,191,192,193,194,195,196,197,198,201,202,225,239,240,242,250,262,290,291,301,307,309,310,322,323,325,329,345,355,363,366,367,368,403,405,429,433,439,440,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'tan_function':([19,49,109,118,141,145,148,149,161,162,163,174,179,185,186,187,188,189,190,191,192,193,194,195,196,197,198,201,202,225,239,240,242,250,262,290,291,301,307,309,310,322,323,325,329,345,355,363,366,367,368,403,405,429,433,439,440,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'succ_function':([19,49,109,118,141,145,148,149,161,162,163,174,179,185,186,187,188,189,190,191,192,193,194,195,196,197,198,201,202,225,239,240,242,250,262,290,291,301,307,309,310,322,323,325,329,345,355,363,366,367,368,403,405,429,433,439,440,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'pred_function':([19,49,109,118,141,145,148,149,161,162,163,174,179,185,186,187,188,189,190,191,192,193,194,195,196,197,198,201,202,225,239,240,242,250,262,290,291,301,307,309,310,322,323,325,329,345,355,363,366,367,368,403,405,429,433,439,440,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'awal_function':([19,49,109,118,141,145,148,149,161,162,163,174,179,185,186,187,188,189,190,191,192,193,194,195,196,197,198,201,202,225,239,240,242,250,262,290,291,301,307,309,310,322,323,325,329,345,355,363,366,367,368,403,405,429,433,439,440,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'akhir_function':([19,49,109,118,141,145,148,149,161,162,163,174,179,185,186,187,188,189,190,191,192,193,194,195,196,197,198,201,202,225,239,240,242,250,262,290,291,301,307,309,310,322,323,325,329,345,355,363,366,367,368,403,405,429,433,439,440,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'firstchar_function':([19,49,109,118,141,145,148,149,161,162,163,174,179,185,186,187,188,189,190,191,192,193,194,195,196,197,198,201,202,225,239,240,242,250,262,290,291,301,307,309,310,322,323,325,329,345,355,363,366,367,368,403,405,429,433,439,440,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'lastchar_function':([19,49,109,118,141,145,148,149,161,162,163,174,179,185,186,187,188,189,190,191,192,193,194,195,196,197,198,201,202,225,239,240,242,250,262,290,291,301,307,309,310,322,323,325,329,345,355,363,366,367,368,403,405,429,433,439,440,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'long_function':([19,49,109,118,141,145,148,149,161,162,163,174,179,185,186,187,188,189,190,191,192,193,194,195,196,197,198,201,202,225,239,240,242,250,262,290,291,301,307,309,310,322,323,325,329,345,355,363,366,367,368,403,405,429,433,439,440,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'iskosong_function':([19,49,109,118,141,145,148,149,161,162,163,174,179,185,186,187,188,189,190,191,192,193,194,195,196,197,198,201,202,225,239,240,242,250,262,290,291,301,307,309,310,322,323,325,329,345,355,363,366,367,368,403,405,429,433,439,440,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'integer_to_real':([19,49,109,118,141,145,148,149,161,162,163,174,179,185,186,187,188,189,190,191,192,193,194,195,196,197,198,201,202,225,239,240,242,250,262,290,291,301,307,309,310,322,323,325,329,345,355,363,366,367,368,403,405,429,433,439,440,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'real_to_integer':([19,49,109,118,141,145,148,149,161,162,163,174,179,185,186,187,188,189,190,191,192,193,194,195,196,197,198,201,202,225,239,240,242,250,262,290,291,301,307,309,310,322,323,325,329,345,355,363,366,367,368,403,405,429,433,439,440,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'multiplicative_expression':([19,49,118,145,148,149,161,162,163,174,185,186,187,188,189,190,191,192,193,194,195,196,197,198,202,239,240,242,262,290,291,301,309,310,323,325,329,345,355,366,367,368,405,429,433,],[89,89,89,89,89,89,89,89,89,269,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'unary_expression':([19,49,109,118,145,148,149,161,162,163,174,179,185,186,187,188,189,190,191,192,193,194,195,196,197,198,202,239,240,242,262,290,291,301,309,310,323,325,329,345,355,366,367,368,405,429,433,],[108,108,199,108,108,108,108,108,108,108,108,270,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,]),'unary_op':([19,49,109,118,145,148,149,161,162,163,174,179,185,186,187,188,189,190,191,192,193,194,195,196,197,198,202,239,240,242,262,290,291,301,309,310,323,325,329,345,355,366,367,368,405,429,433,],[109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,]),'exponentiation_expression':([19,49,109,118,145,148,149,161,162,163,174,179,185,186,187,188,189,190,191,192,193,194,195,196,197,198,201,202,239,240,242,262,290,291,301,309,310,323,325,329,345,355,366,367,368,405,429,433,],[110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,285,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,]),'primary_expression':([19,49,109,118,145,148,149,161,162,163,174,179,185,186,187,188,189,190,191,192,193,194,195,196,197,198,201,202,239,240,242,262,290,291,301,309,310,323,325,329,345,355,366,367,368,405,429,433,],[112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,]),'variable_access':([19,49,109,118,141,145,148,149,161,162,163,174,179,185,186,187,188,189,190,191,192,193,194,195,196,197,198,201,202,225,239,240,242,250,262,290,291,301,307,309,310,322,323,325,329,345,355,363,366,367,368,403,405,429,433,439,440,],[113,113,113,113,236,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,236,113,113,113,319,113,113,113,113,236,113,113,374,113,113,113,113,113,374,113,113,113,374,113,113,113,236,236,]),'unsigned_constant':([19,49,109,118,145,148,149,161,162,163,174,179,185,186,187,188,189,190,191,192,193,194,195,196,197,198,201,202,239,240,242,262,290,291,301,309,310,323,325,329,345,355,366,367,368,405,429,433,],[114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,]),'set_constructor':([19,49,109,118,145,148,149,161,162,163,174,179,185,186,187,188,189,190,191,192,193,194,195,196,197,198,201,202,239,240,242,262,290,291,301,309,310,323,325,329,345,355,366,367,368,405,429,433,],[115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,]),'indexed_variable':([19,49,109,118,141,145,148,149,161,162,163,174,179,185,186,187,188,189,190,191,192,193,194,195,196,197,198,201,202,225,239,240,242,250,262,290,291,301,307,309,310,322,323,325,329,345,355,363,366,367,368,403,405,429,433,439,440,],[116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,]),'field_designator':([19,49,109,118,141,145,148,149,161,162,163,174,179,185,186,187,188,189,190,191,192,193,194,195,196,197,198,201,202,225,239,240,242,250,262,290,291,301,307,309,310,322,323,325,329,345,355,363,366,367,368,403,405,429,433,439,440,],[117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,]),'formal_parameter_section_list':([21,],[119,]),'formal_parameter_section':([21,],[121,]),'parameter_specification':([21,209,210,],[122,292,293,]),'procedure_parameter_type':([21,209,210,],[123,123,123,]),'constant_declaration_block':([25,302,304,],[126,357,358,]),'constant_declaration':([25,302,304,],[128,128,128,]),'constant_sub_declaration':([25,128,302,304,],[129,218,129,129,]),'procedure_and_function_implementation_block':([26,381,],[131,406,]),'subprogram_implementation_list':([26,381,],[133,133,]),'subprogram_implementation':([26,133,381,],[134,220,134,]),'procedure_implementation':([26,133,381,],[135,135,135,]),'function_implementation':([26,133,381,],[136,136,136,]),'statement_part':([27,],[139,]),'compound_statement':([27,246,250,362,364,365,369,370,371,397,418,],[140,317,318,392,394,395,399,400,401,421,428,]),'function_actual_parameter_list':([47,152,200,238,267,],[147,147,147,147,147,]),'array_index':([51,],[160,]),'relational_op':([55,151,207,259,271,272,273,274,275,276,277,278,279,280,281,282,283,284,287,311,313,347,360,377,380,435,],[163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,]),'additive_op':([65,268,],[174,174,]),'multiplicative_op':([89,269,],[179,179,]),'member_designator_list':([118,],[204,]),'member_designator':([118,290,],[206,346,]),'type_declaration_block':([126,357,358,],[213,389,390,]),'type_declaration':([126,357,358,],[215,215,215,]),'type_sub_declaration':([126,215,357,358,],[216,299,216,216,]),'procedure_implementation_block':([137,],[221,]),'function_implementation_block':([138,],[223,]),'statement_sequence':([141,439,],[225,440,]),'statement':([141,225,307,439,440,],[226,308,359,226,308,]),'assignment_statement':([141,225,307,439,440,],[227,227,227,227,227,]),'procedure_statement':([141,225,307,439,440,],[228,228,228,228,228,]),'function_returned_statement':([141,225,307,439,440,],[229,229,229,229,229,]),'if_statement':([141,225,307,439,440,],[230,230,230,230,230,]),'depend_on_statement':([141,225,307,439,440,],[231,231,231,231,231,]),'while_statement':([141,225,307,439,440,],[232,232,232,232,232,]),'traversal_statement':([141,225,307,439,440,],[233,233,233,233,233,]),'repeat_statement':([141,225,307,439,440,],[234,234,234,234,234,]),'iterate_stop_statement':([141,225,307,439,440,],[235,235,235,235,235,]),'builtin_procedure_statements':([141,225,307,439,440,],[237,237,237,237,237,]),'control_variable':([141,225,307,439,440,],[243,243,243,243,243,]),'repeat_until_statement':([141,225,307,439,440,],[244,244,244,244,244,]),'repeat_times_statement':([141,225,307,439,440,],[245,245,245,245,245,]),'input_statement':([141,225,307,439,440,],[248,248,248,248,248,]),'output_statement':([141,225,307,439,440,],[249,249,249,249,249,]),'actual_parameter_list':([148,310,],[257,361,]),'actual_parameter':([148,310,325,],[258,258,378,]),'index_list':([161,],[263,]),'index_type':([161,329,],[264,379,]),'index_expression_list':([202,],[286,]),'variable_declaration_block':([213,389,390,],[295,416,417,]),'variable_declaration':([213,389,390,],[297,297,297,]),'boolean_expression':([240,242,367,368,],[312,315,397,398,]),'component_type':([262,],[326,]),'procedure_and_function_declaration_block':([295,],[348,]),'procedure_and_function_declaration':([295,],[350,]),'procedure_and_function_sub_declaration':([295,350,],[351,383,]),'traversal_range_value':([316,],[365,]),'input_statement_parameter_list':([322,363,],[372,393,]),'input_statement_parameter':([322,363,403,],[373,373,422,]),'output_statement_parameter_list':([323,],[375,]),'output_statement_parameter':([323,405,],[376,423,]),'type_variety':([355,],[384,]),'type_user_defined':([355,],[386,]),'variable_declaration_comma':([387,425,],[407,430,]),'depend_on_action_list':([429,],[433,]),'depend_on_action':([429,433,],[434,437,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> file","S'",1,None,None,None),
  ('file -> program','file',1,'p_file','notal_parser.py',12),
  ('program -> RW_PROGRAM identifier block','program',3,'p_program','notal_parser.py',17),
  ('program -> function_declaration block','program',2,'p_program','notal_parser.py',18),
  ('program -> procedure_declaration block','program',2,'p_program','notal_parser.py',19),
  ('identifier_list -> identifier_list S_COMMA identifier','identifier_list',3,'p_identifier_list','notal_parser.py',24),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','notal_parser.py',25),
  ('kamus_declaration -> RW_KAMUS','kamus_declaration',1,'p_kamus_declaration','notal_parser.py',34),
  ('kamus_declaration -> RW_KAMUS RW_LOKAL','kamus_declaration',2,'p_kamus_declaration','notal_parser.py',35),
  ('block -> kamus_declaration INDENT constant_declaration_block type_declaration_block variable_declaration_block procedure_and_function_declaration_block algorithm_block procedure_and_function_implementation_block','block',8,'p_block','notal_parser.py',43),
  ('block -> kamus_declaration algorithm_block procedure_and_function_implementation_block','block',3,'p_block','notal_parser.py',44),
  ('constant_declaration_block -> empty','constant_declaration_block',1,'p_constant_declaration_block','notal_parser.py',54),
  ('constant_declaration_block -> constant_declaration','constant_declaration_block',1,'p_constant_declaration_block','notal_parser.py',55),
  ('type_declaration_block -> empty','type_declaration_block',1,'p_type_declaration_block','notal_parser.py',62),
  ('type_declaration_block -> type_declaration','type_declaration_block',1,'p_type_declaration_block','notal_parser.py',63),
  ('variable_declaration_block -> empty','variable_declaration_block',1,'p_variable_declaration_block','notal_parser.py',70),
  ('variable_declaration_block -> variable_declaration','variable_declaration_block',1,'p_variable_declaration_block','notal_parser.py',71),
  ('procedure_and_function_declaration_block -> DEDENT','procedure_and_function_declaration_block',1,'p_procedure_and_function_declaration_block','notal_parser.py',78),
  ('procedure_and_function_declaration_block -> procedure_and_function_declaration DEDENT','procedure_and_function_declaration_block',2,'p_procedure_and_function_declaration_block','notal_parser.py',79),
  ('algorithm_block -> RW_ALGORITMA statement_part','algorithm_block',2,'p_algorithm_block','notal_parser.py',86),
  ('procedure_and_function_implementation_block -> empty','procedure_and_function_implementation_block',1,'p_procedure_and_function_implementation_block','notal_parser.py',91),
  ('procedure_and_function_implementation_block -> subprogram_implementation_list','procedure_and_function_implementation_block',1,'p_procedure_and_function_implementation_block','notal_parser.py',92),
  ('subprogram_implementation_list -> subprogram_implementation_list subprogram_implementation','subprogram_implementation_list',2,'p_subprogram_implementation_list','notal_parser.py',99),
  ('subprogram_implementation_list -> subprogram_implementation','subprogram_implementation_list',1,'p_subprogram_implementation_list','notal_parser.py',100),
  ('subprogram_implementation -> procedure_implementation','subprogram_implementation',1,'p_subprogram_implementation','notal_parser.py',109),
  ('subprogram_implementation -> function_implementation','subprogram_implementation',1,'p_subprogram_implementation','notal_parser.py',110),
  ('procedure_implementation -> procedure_declaration procedure_implementation_block','procedure_implementation',2,'p_procedure_implementation','notal_parser.py',115),
  ('procedure_implementation -> procedure_declaration','procedure_implementation',1,'p_procedure_implementation','notal_parser.py',116),
  ('procedure_implementation_block -> kamus_declaration INDENT constant_declaration_block type_declaration_block variable_declaration_block DEDENT algorithm_block','procedure_implementation_block',7,'p_procedure_implementation_block','notal_parser.py',121),
  ('procedure_implementation_block -> kamus_declaration algorithm_block','procedure_implementation_block',2,'p_procedure_implementation_block','notal_parser.py',122),
  ('function_implementation -> function_declaration function_implementation_block','function_implementation',2,'p_function_implementation','notal_parser.py',132),
  ('function_implementation -> function_declaration','function_implementation',1,'p_function_implementation','notal_parser.py',133),
  ('function_implementation_block -> kamus_declaration INDENT constant_declaration_block type_declaration_block variable_declaration_block DEDENT algorithm_block','function_implementation_block',7,'p_function_implementation_block','notal_parser.py',138),
  ('function_implementation_block -> kamus_declaration algorithm_block','function_implementation_block',2,'p_function_implementation_block','notal_parser.py',139),
  ('type_denoter -> ordinal_type','type_denoter',1,'p_type_denoter','notal_parser.py',149),
  ('type_denoter -> structured_type','type_denoter',1,'p_type_denoter','notal_parser.py',150),
  ('type_denoter -> RW_INTEGER','type_denoter',1,'p_type_denoter','notal_parser.py',151),
  ('type_denoter -> RW_REAL','type_denoter',1,'p_type_denoter','notal_parser.py',152),
  ('type_denoter -> RW_STRING','type_denoter',1,'p_type_denoter','notal_parser.py',153),
  ('type_denoter -> RW_CHARACTER','type_denoter',1,'p_type_denoter','notal_parser.py',154),
  ('type_denoter -> RW_BOOLEAN','type_denoter',1,'p_type_denoter','notal_parser.py',155),
  ('ordinal_type -> enumerated_type','ordinal_type',1,'p_ordinal_type','notal_parser.py',166),
  ('ordinal_type -> subrange_type','ordinal_type',1,'p_ordinal_type','notal_parser.py',167),
  ('ordinal_type -> identifier','ordinal_type',1,'p_ordinal_type','notal_parser.py',168),
  ('enumerated_type -> S_LEFT_BRACKET identifier_list S_RIGHT_BRACKET','enumerated_type',3,'p_enumerated_type','notal_parser.py',173),
  ('subrange_type -> subrange_type_option','subrange_type',1,'p_subrange_type','notal_parser.py',178),
  ('subrange_type_option -> subrange_option S_UP_TO subrange_option','subrange_type_option',3,'p_subrange_type_option','notal_parser.py',183),
  ('subrange_option -> identifier','subrange_option',1,'p_subrange_option','notal_parser.py',188),
  ('subrange_option -> constant','subrange_option',1,'p_subrange_option','notal_parser.py',189),
  ('subrange_option -> function_designator','subrange_option',1,'p_subrange_option','notal_parser.py',190),
  ('subrange_option -> expression','subrange_option',1,'p_subrange_option','notal_parser.py',191),
  ('structured_type -> array_type','structured_type',1,'p_structured_type','notal_parser.py',196),
  ('array_type -> RW_ARRAY array_index RW_OF component_type','array_type',4,'p_array_type','notal_parser.py',201),
  ('array_index -> S_LEFT_SQUARE_BRACKET index_list S_RIGHT_SQUARE_BRACKET','array_index',3,'p_array_index','notal_parser.py',206),
  ('index_list -> index_list S_COMMA index_type','index_list',3,'p_index_list','notal_parser.py',211),
  ('index_list -> index_type','index_list',1,'p_index_list','notal_parser.py',212),
  ('index_type -> ordinal_type','index_type',1,'p_index_type','notal_parser.py',221),
  ('component_type -> type_denoter','component_type',1,'p_component_type','notal_parser.py',226),
  ('variable_declaration -> variable_declaration variable_sub_declaration','variable_declaration',2,'p_variable_declaration','notal_parser.py',230),
  ('variable_declaration -> variable_sub_declaration','variable_declaration',1,'p_variable_declaration','notal_parser.py',231),
  ('variable_sub_declaration -> identifier_list S_COLON type_denoter','variable_sub_declaration',3,'p_variable_sub_declaration','notal_parser.py',240),
  ('variable_declaration_comma -> variable_sub_declaration','variable_declaration_comma',1,'p_variable_declaration_comma','notal_parser.py',245),
  ('variable_declaration_comma -> variable_sub_declaration S_COMMA variable_declaration_comma','variable_declaration_comma',3,'p_variable_declaration_comma','notal_parser.py',246),
  ('constant_declaration -> constant_declaration constant_sub_declaration','constant_declaration',2,'p_constant_declaration','notal_parser.py',255),
  ('constant_declaration -> constant_sub_declaration','constant_declaration',1,'p_constant_declaration','notal_parser.py',256),
  ('constant_sub_declaration -> RW_CONSTANT identifier S_COLON type_denoter S_EQUAL constant','constant_sub_declaration',6,'p_constant_sub_declaration','notal_parser.py',265),
  ('type_declaration -> type_declaration type_sub_declaration','type_declaration',2,'p_type_declaration','notal_parser.py',270),
  ('type_declaration -> type_sub_declaration','type_declaration',1,'p_type_declaration','notal_parser.py',271),
  ('type_sub_declaration -> RW_TYPE identifier S_COLON type_variety','type_sub_declaration',4,'p_type_sub_declaration','notal_parser.py',280),
  ('type_variety -> type_denoter','type_variety',1,'p_type_variety','notal_parser.py',285),
  ('type_variety -> type_user_defined','type_variety',1,'p_type_variety','notal_parser.py',286),
  ('type_user_defined -> S_LESS_THAN variable_declaration_comma S_GREATER_THAN','type_user_defined',3,'p_type_user_defined','notal_parser.py',291),
  ('procedure_and_function_declaration -> procedure_and_function_declaration procedure_and_function_sub_declaration','procedure_and_function_declaration',2,'p_procedure_and_function_declaration','notal_parser.py',296),
  ('procedure_and_function_declaration -> procedure_and_function_sub_declaration','procedure_and_function_declaration',1,'p_procedure_and_function_declaration','notal_parser.py',297),
  ('procedure_and_function_sub_declaration -> procedure_declaration','procedure_and_function_sub_declaration',1,'p_procedure_and_function_sub_declaration','notal_parser.py',306),
  ('procedure_and_function_sub_declaration -> function_declaration','procedure_and_function_sub_declaration',1,'p_procedure_and_function_sub_declaration','notal_parser.py',307),
  ('procedure_declaration -> procedure_identifier formal_parameter_list','procedure_declaration',2,'p_procedure_declaration','notal_parser.py',312),
  ('procedure_identifier -> RW_PROCEDURE identifier','procedure_identifier',2,'p_procedure_identifier','notal_parser.py',317),
  ('formal_parameter_list -> S_LEFT_BRACKET formal_parameter_section_list S_RIGHT_BRACKET','formal_parameter_list',3,'p_formal_parameter_list','notal_parser.py',322),
  ('formal_parameter_section_list -> empty','formal_parameter_section_list',1,'p_formal_parameter_section_list','notal_parser.py',327),
  ('formal_parameter_section_list -> formal_parameter_section','formal_parameter_section_list',1,'p_formal_parameter_section_list','notal_parser.py',328),
  ('formal_parameter_section -> formal_parameter_section S_SEMI_COLON parameter_specification','formal_parameter_section',3,'p_formal_parameter_section','notal_parser.py',333),
  ('formal_parameter_section -> formal_parameter_section S_COMMA parameter_specification','formal_parameter_section',3,'p_formal_parameter_section','notal_parser.py',334),
  ('formal_parameter_section -> parameter_specification','formal_parameter_section',1,'p_formal_parameter_section','notal_parser.py',335),
  ('parameter_specification -> procedure_parameter_type variable_sub_declaration','parameter_specification',2,'p_parameter_specification','notal_parser.py',344),
  ('procedure_parameter_type -> RW_INPUT','procedure_parameter_type',1,'p_procedure_parameter_type','notal_parser.py',349),
  ('procedure_parameter_type -> RW_OUTPUT','procedure_parameter_type',1,'p_procedure_parameter_type','notal_parser.py',350),
  ('procedure_parameter_type -> RW_INPUT S_DIVIDE RW_OUTPUT','procedure_parameter_type',3,'p_procedure_parameter_type','notal_parser.py',351),
  ('function_declaration -> function_identification function_formal_parameter_list function_return_type','function_declaration',3,'p_function_declaration','notal_parser.py',358),
  ('function_declaration -> function_identification function_return_type','function_declaration',2,'p_function_declaration','notal_parser.py',359),
  ('function_identification -> RW_FUNCTION identifier','function_identification',2,'p_function_identification','notal_parser.py',365),
  ('function_return_type -> S_RETURN type_denoter','function_return_type',2,'p_function_return_type','notal_parser.py',370),
  ('function_formal_parameter_list -> S_LEFT_BRACKET function_parameter_list_option S_RIGHT_BRACKET','function_formal_parameter_list',3,'p_function_formal_parameter_list','notal_parser.py',375),
  ('function_actual_parameter_list -> S_LEFT_BRACKET actual_parameter_list S_RIGHT_BRACKET','function_actual_parameter_list',3,'p_function_actual_parameter_list','notal_parser.py',380),
  ('function_parameter_list_option -> function_parameter_list','function_parameter_list_option',1,'p_function_parameter_list_option','notal_parser.py',385),
  ('function_parameter_list_option -> empty','function_parameter_list_option',1,'p_function_parameter_list_option','notal_parser.py',386),
  ('function_parameter_list -> function_parameter_list S_SEMI_COLON function_parameter_declaration','function_parameter_list',3,'p_function_parameter_list','notal_parser.py',391),
  ('function_parameter_list -> function_parameter_list S_COMMA function_parameter_declaration','function_parameter_list',3,'p_function_parameter_list','notal_parser.py',392),
  ('function_parameter_list -> function_parameter_declaration','function_parameter_list',1,'p_function_parameter_list','notal_parser.py',393),
  ('function_parameter_declaration -> variable_sub_declaration','function_parameter_declaration',1,'p_function_parameter_declaration','notal_parser.py',402),
  ('statement_part -> compound_statement','statement_part',1,'p_statement_part','notal_parser.py',407),
  ('compound_statement -> INDENT statement_sequence DEDENT','compound_statement',3,'p_compound_statement','notal_parser.py',412),
  ('statement_sequence -> statement_sequence S_SEMI_COLON statement','statement_sequence',3,'p_statement_sequence','notal_parser.py',417),
  ('statement_sequence -> statement_sequence statement','statement_sequence',2,'p_statement_sequence','notal_parser.py',418),
  ('statement_sequence -> statement','statement_sequence',1,'p_statement_sequence','notal_parser.py',419),
  ('statement -> assignment_statement','statement',1,'p_statement','notal_parser.py',431),
  ('statement -> procedure_statement','statement',1,'p_statement','notal_parser.py',432),
  ('statement -> function_returned_statement','statement',1,'p_statement','notal_parser.py',433),
  ('statement -> if_statement','statement',1,'p_statement','notal_parser.py',434),
  ('statement -> depend_on_statement','statement',1,'p_statement','notal_parser.py',435),
  ('statement -> while_statement','statement',1,'p_statement','notal_parser.py',436),
  ('statement -> traversal_statement','statement',1,'p_statement','notal_parser.py',437),
  ('statement -> repeat_statement','statement',1,'p_statement','notal_parser.py',438),
  ('statement -> iterate_stop_statement','statement',1,'p_statement','notal_parser.py',439),
  ('assignment_statement -> variable_access S_ASSIGNMENT expression','assignment_statement',3,'p_assignment_statement','notal_parser.py',444),
  ('procedure_statement -> builtin_procedure_statements','procedure_statement',1,'p_procedure_statement','notal_parser.py',449),
  ('procedure_statement -> identifier S_LEFT_BRACKET actual_parameter_list S_RIGHT_BRACKET','procedure_statement',4,'p_procedure_statement','notal_parser.py',450),
  ('procedure_statement -> identifier','procedure_statement',1,'p_procedure_statement','notal_parser.py',451),
  ('actual_parameter_list -> actual_parameter_list S_COMMA actual_parameter','actual_parameter_list',3,'p_actual_parameter_list','notal_parser.py',460),
  ('actual_parameter_list -> actual_parameter','actual_parameter_list',1,'p_actual_parameter_list','notal_parser.py',461),
  ('actual_parameter -> expression','actual_parameter',1,'p_actual_parameter','notal_parser.py',470),
  ('builtin_procedure_statements -> input_statement','builtin_procedure_statements',1,'p_builtin_procedure_statements','notal_parser.py',475),
  ('builtin_procedure_statements -> output_statement','builtin_procedure_statements',1,'p_builtin_procedure_statements','notal_parser.py',476),
  ('input_statement -> RW_INPUT S_LEFT_BRACKET input_statement_parameter_list S_RIGHT_BRACKET','input_statement',4,'p_input_statement','notal_parser.py',481),
  ('input_statement_parameter_list -> input_statement_parameter_list S_COMMA input_statement_parameter','input_statement_parameter_list',3,'p_input_statement_parameter_list','notal_parser.py',486),
  ('input_statement_parameter_list -> input_statement_parameter','input_statement_parameter_list',1,'p_input_statement_parameter_list','notal_parser.py',487),
  ('input_statement_parameter -> variable_access','input_statement_parameter',1,'p_input_statement_parameter','notal_parser.py',496),
  ('output_statement -> RW_OUTPUT S_LEFT_BRACKET output_statement_parameter_list S_RIGHT_BRACKET','output_statement',4,'p_output_statement','notal_parser.py',501),
  ('output_statement_parameter_list -> output_statement_parameter_list S_COMMA output_statement_parameter','output_statement_parameter_list',3,'p_output_statement_parameter_list','notal_parser.py',506),
  ('output_statement_parameter_list -> output_statement_parameter','output_statement_parameter_list',1,'p_output_statement_parameter_list','notal_parser.py',507),
  ('output_statement_parameter -> expression','output_statement_parameter',1,'p_output_statement_parameter','notal_parser.py',516),
  ('function_returned_statement -> S_RETURN expression','function_returned_statement',2,'p_function_returned_statement','notal_parser.py',522),
  ('depend_on_statement -> RW_DEPEND RW_ON S_LEFT_BRACKET input_statement_parameter_list S_RIGHT_BRACKET INDENT depend_on_action_list DEDENT','depend_on_statement',8,'p_depend_on_statement','notal_parser.py',527),
  ('depend_on_action_list -> depend_on_action_list depend_on_action','depend_on_action_list',2,'p_depend_on_action_list','notal_parser.py',532),
  ('depend_on_action_list -> depend_on_action','depend_on_action_list',1,'p_depend_on_action_list','notal_parser.py',533),
  ('depend_on_action -> expression S_COLON INDENT statement_sequence DEDENT','depend_on_action',5,'p_depend_on_action','notal_parser.py',542),
  ('if_statement -> RW_IF boolean_expression RW_THEN compound_statement','if_statement',4,'p_if_statement','notal_parser.py',547),
  ('if_statement -> RW_IF boolean_expression RW_THEN compound_statement RW_ELSE compound_statement','if_statement',6,'p_if_statement','notal_parser.py',548),
  ('boolean_expression -> expression','boolean_expression',1,'p_boolean_expression','notal_parser.py',556),
  ('repeat_statement -> repeat_until_statement','repeat_statement',1,'p_repeat_statement','notal_parser.py',561),
  ('repeat_statement -> repeat_times_statement','repeat_statement',1,'p_repeat_statement','notal_parser.py',562),
  ('repeat_until_statement -> RW_REPEAT compound_statement RW_UNTIL boolean_expression','repeat_until_statement',4,'p_repeat_until_statement','notal_parser.py',567),
  ('repeat_times_statement -> RW_REPEAT variable_access RW_TIMES compound_statement','repeat_times_statement',4,'p_repeat_times_statement','notal_parser.py',572),
  ('repeat_times_statement -> RW_REPEAT integer_constant RW_TIMES compound_statement','repeat_times_statement',4,'p_repeat_times_statement','notal_parser.py',573),
  ('repeat_times_statement -> RW_REPEAT function_designator RW_TIMES compound_statement','repeat_times_statement',4,'p_repeat_times_statement','notal_parser.py',574),
  ('while_statement -> RW_WHILE boolean_expression RW_DO compound_statement','while_statement',4,'p_while_statement','notal_parser.py',579),
  ('iterate_stop_statement -> RW_ITERATE compound_statement RW_STOP boolean_expression compound_statement','iterate_stop_statement',5,'p_iterate_stop_statement','notal_parser.py',584),
  ('traversal_statement -> control_variable RW_TRAVERSAL traversal_range_value compound_statement','traversal_statement',4,'p_traversal_statement','notal_parser.py',589),
  ('traversal_range_value -> S_LEFT_SQUARE_BRACKET subrange_type S_RIGHT_SQUARE_BRACKET','traversal_range_value',3,'p_traversal_range_value','notal_parser.py',594),
  ('control_variable -> identifier','control_variable',1,'p_control_variable','notal_parser.py',599),
  ('unsigned_constant -> non_string_constant','unsigned_constant',1,'p_unsigned_constant','notal_parser.py',604),
  ('unsigned_constant -> string_char_constant','unsigned_constant',1,'p_unsigned_constant','notal_parser.py',605),
  ('unsigned_constant -> boolean_constant','unsigned_constant',1,'p_unsigned_constant','notal_parser.py',606),
  ('unsigned_constant -> nil_constant','unsigned_constant',1,'p_unsigned_constant','notal_parser.py',607),
  ('constant -> string_char_constant','constant',1,'p_constant','notal_parser.py',612),
  ('constant -> non_string_constant','constant',1,'p_constant','notal_parser.py',613),
  ('constant -> sign non_string_constant','constant',2,'p_constant','notal_parser.py',614),
  ('constant -> boolean_constant','constant',1,'p_constant','notal_parser.py',615),
  ('constant -> nil_constant','constant',1,'p_constant','notal_parser.py',616),
  ('sign -> S_PLUS','sign',1,'p_sign','notal_parser.py',624),
  ('sign -> S_MINUS','sign',1,'p_sign','notal_parser.py',625),
  ('boolean_constant -> L_BOOLEAN_TRUE','boolean_constant',1,'p_boolean_constant','notal_parser.py',633),
  ('boolean_constant -> L_BOOLEAN_FALSE','boolean_constant',1,'p_boolean_constant','notal_parser.py',634),
  ('non_string_constant -> integer_constant','non_string_constant',1,'p_non_string_constant','notal_parser.py',642),
  ('non_string_constant -> real_constant','non_string_constant',1,'p_non_string_constant','notal_parser.py',643),
  ('integer_constant -> L_INTEGER_NUMBER','integer_constant',1,'p_integer_constant','notal_parser.py',648),
  ('real_constant -> L_REAL_NUMBER','real_constant',1,'p_real_constant','notal_parser.py',654),
  ('string_char_constant -> string_constant','string_char_constant',1,'p_string_char_constant','notal_parser.py',660),
  ('string_char_constant -> char_constant','string_char_constant',1,'p_string_char_constant','notal_parser.py',661),
  ('string_constant -> L_STRING','string_constant',1,'p_string_constant','notal_parser.py',666),
  ('char_constant -> L_CHARACTER','char_constant',1,'p_char_constant','notal_parser.py',672),
  ('nil_constant -> L_NIL','nil_constant',1,'p_nil_constant','notal_parser.py',678),
  ('variable_access -> identifier','variable_access',1,'p_variable_access','notal_parser.py',686),
  ('variable_access -> indexed_variable','variable_access',1,'p_variable_access','notal_parser.py',687),
  ('variable_access -> field_designator','variable_access',1,'p_variable_access','notal_parser.py',688),
  ('variable_access -> function_designator','variable_access',1,'p_variable_access','notal_parser.py',689),
  ('indexed_variable -> variable_access S_LEFT_SQUARE_BRACKET index_expression_list S_RIGHT_SQUARE_BRACKET','indexed_variable',4,'p_indexed_variable','notal_parser.py',694),
  ('index_expression_list -> index_expression_list S_COMMA expression','index_expression_list',3,'p_index_expression_list','notal_parser.py',699),
  ('index_expression_list -> expression','index_expression_list',1,'p_index_expression_list','notal_parser.py',700),
  ('field_designator -> variable_access S_DOT identifier','field_designator',3,'p_field_designator','notal_parser.py',709),
  ('expression -> expression relational_op additive_expression','expression',3,'p_expression','notal_parser.py',714),
  ('expression -> additive_expression','expression',1,'p_expression','notal_parser.py',715),
  ('relational_op -> S_EQUAL','relational_op',1,'p_relational_op','notal_parser.py',723),
  ('relational_op -> S_NOT_EQUAL','relational_op',1,'p_relational_op','notal_parser.py',724),
  ('relational_op -> S_LESS_THAN_EQUAL','relational_op',1,'p_relational_op','notal_parser.py',725),
  ('relational_op -> S_GREATER_THAN_EQUAL','relational_op',1,'p_relational_op','notal_parser.py',726),
  ('relational_op -> S_LESS_THAN','relational_op',1,'p_relational_op','notal_parser.py',727),
  ('relational_op -> S_GREATER_THAN','relational_op',1,'p_relational_op','notal_parser.py',728),
  ('relational_op -> S_ELEMENT_OF','relational_op',1,'p_relational_op','notal_parser.py',729),
  ('relational_op -> RW_EQ','relational_op',1,'p_relational_op','notal_parser.py',730),
  ('relational_op -> RW_NEQ','relational_op',1,'p_relational_op','notal_parser.py',731),
  ('additive_expression -> additive_expression additive_op multiplicative_expression','additive_expression',3,'p_additive_expression','notal_parser.py',739),
  ('additive_expression -> multiplicative_expression','additive_expression',1,'p_additive_expression','notal_parser.py',740),
  ('additive_op -> S_PLUS','additive_op',1,'p_additive_op','notal_parser.py',748),
  ('additive_op -> S_MINUS','additive_op',1,'p_additive_op','notal_parser.py',749),
  ('additive_op -> RW_OR','additive_op',1,'p_additive_op','notal_parser.py',750),
  ('additive_op -> RW_XOR','additive_op',1,'p_additive_op','notal_parser.py',751),
  ('multiplicative_expression -> multiplicative_expression multiplicative_op unary_expression','multiplicative_expression',3,'p_multiplicative_expression','notal_parser.py',759),
  ('multiplicative_expression -> unary_expression','multiplicative_expression',1,'p_multiplicative_expression','notal_parser.py',760),
  ('multiplicative_op -> S_TIMES','multiplicative_op',1,'p_multiplicative_op','notal_parser.py',768),
  ('multiplicative_op -> S_DIVIDE','multiplicative_op',1,'p_multiplicative_op','notal_parser.py',769),
  ('multiplicative_op -> RW_DIV','multiplicative_op',1,'p_multiplicative_op','notal_parser.py',770),
  ('multiplicative_op -> RW_MOD','multiplicative_op',1,'p_multiplicative_op','notal_parser.py',771),
  ('multiplicative_op -> RW_AND','multiplicative_op',1,'p_multiplicative_op','notal_parser.py',772),
  ('unary_expression -> unary_op unary_expression','unary_expression',2,'p_unary_expression','notal_parser.py',780),
  ('unary_expression -> exponentiation_expression','unary_expression',1,'p_unary_expression','notal_parser.py',781),
  ('exponentiation_expression -> primary_expression','exponentiation_expression',1,'p_exponentiation_expression','notal_parser.py',789),
  ('exponentiation_expression -> primary_expression S_POWER exponentiation_expression','exponentiation_expression',3,'p_exponentiation_expression','notal_parser.py',790),
  ('unary_op -> S_PLUS','unary_op',1,'p_unary_op','notal_parser.py',798),
  ('unary_op -> S_MINUS','unary_op',1,'p_unary_op','notal_parser.py',799),
  ('unary_op -> RW_NOT','unary_op',1,'p_unary_op','notal_parser.py',800),
  ('primary_expression -> variable_access','primary_expression',1,'p_primary_expression','notal_parser.py',808),
  ('primary_expression -> unsigned_constant','primary_expression',1,'p_primary_expression','notal_parser.py',809),
  ('primary_expression -> S_LEFT_BRACKET expression S_RIGHT_BRACKET','primary_expression',3,'p_primary_expression','notal_parser.py',810),
  ('primary_expression -> set_constructor','primary_expression',1,'p_primary_expression','notal_parser.py',811),
  ('primary_expression -> function_designator','primary_expression',1,'p_primary_expression','notal_parser.py',812),
  ('set_constructor -> S_LEFT_SQUARE_BRACKET member_designator_list S_RIGHT_SQUARE_BRACKET','set_constructor',3,'p_set_constructor','notal_parser.py',820),
  ('set_constructor -> S_LEFT_SQUARE_BRACKET S_RIGHT_SQUARE_BRACKET','set_constructor',2,'p_set_constructor','notal_parser.py',821),
  ('member_designator_list -> member_designator_list S_COMMA member_designator','member_designator_list',3,'p_member_designator_list','notal_parser.py',827),
  ('member_designator_list -> member_designator','member_designator_list',1,'p_member_designator_list','notal_parser.py',828),
  ('member_designator -> member_designator S_UP_TO expression','member_designator',3,'p_member_designator','notal_parser.py',837),
  ('member_designator -> expression','member_designator',1,'p_member_designator','notal_parser.py',838),
  ('function_designator -> user_defined_function_call','function_designator',1,'p_function_designator','notal_parser.py',847),
  ('function_designator -> math_function_call','function_designator',1,'p_function_designator','notal_parser.py',848),
  ('function_designator -> string_function_call','function_designator',1,'p_function_designator','notal_parser.py',849),
  ('function_designator -> converter_function_call','function_designator',1,'p_function_designator','notal_parser.py',850),
  ('user_defined_function_call -> identifier function_actual_parameter_list','user_defined_function_call',2,'p_user_defined_function_call','notal_parser.py',855),
  ('math_function_call -> abs_function','math_function_call',1,'p_math_function_call','notal_parser.py',860),
  ('math_function_call -> sin_function','math_function_call',1,'p_math_function_call','notal_parser.py',861),
  ('math_function_call -> cos_function','math_function_call',1,'p_math_function_call','notal_parser.py',862),
  ('math_function_call -> tan_function','math_function_call',1,'p_math_function_call','notal_parser.py',863),
  ('math_function_call -> succ_function','math_function_call',1,'p_math_function_call','notal_parser.py',864),
  ('math_function_call -> pred_function','math_function_call',1,'p_math_function_call','notal_parser.py',865),
  ('abs_function -> RW_ABS S_LEFT_BRACKET expression S_RIGHT_BRACKET','abs_function',4,'p_abs_function','notal_parser.py',870),
  ('sin_function -> RW_SIN S_LEFT_BRACKET expression S_RIGHT_BRACKET','sin_function',4,'p_sin_function','notal_parser.py',875),
  ('cos_function -> RW_COS S_LEFT_BRACKET expression S_RIGHT_BRACKET','cos_function',4,'p_cos_function','notal_parser.py',880),
  ('tan_function -> RW_TAN S_LEFT_BRACKET expression S_RIGHT_BRACKET','tan_function',4,'p_tan_function','notal_parser.py',885),
  ('succ_function -> RW_SUCC S_LEFT_BRACKET expression S_RIGHT_BRACKET','succ_function',4,'p_succ_function','notal_parser.py',890),
  ('pred_function -> RW_PRED S_LEFT_BRACKET expression S_RIGHT_BRACKET','pred_function',4,'p_pred_function','notal_parser.py',895),
  ('string_function_call -> awal_function','string_function_call',1,'p_string_function_call','notal_parser.py',900),
  ('string_function_call -> akhir_function','string_function_call',1,'p_string_function_call','notal_parser.py',901),
  ('string_function_call -> firstchar_function','string_function_call',1,'p_string_function_call','notal_parser.py',902),
  ('string_function_call -> lastchar_function','string_function_call',1,'p_string_function_call','notal_parser.py',903),
  ('string_function_call -> long_function','string_function_call',1,'p_string_function_call','notal_parser.py',904),
  ('string_function_call -> iskosong_function','string_function_call',1,'p_string_function_call','notal_parser.py',905),
  ('awal_function -> RW_AWAL S_LEFT_BRACKET expression S_RIGHT_BRACKET','awal_function',4,'p_awal_function','notal_parser.py',910),
  ('akhir_function -> RW_AKHIR S_LEFT_BRACKET expression S_RIGHT_BRACKET','akhir_function',4,'p_akhir_function','notal_parser.py',915),
  ('firstchar_function -> RW_FIRSTCHAR S_LEFT_BRACKET expression S_RIGHT_BRACKET','firstchar_function',4,'p_firstchar_function','notal_parser.py',920),
  ('lastchar_function -> RW_LASTCHAR S_LEFT_BRACKET expression S_RIGHT_BRACKET','lastchar_function',4,'p_lastchar_function','notal_parser.py',925),
  ('long_function -> RW_LONG S_LEFT_BRACKET expression S_RIGHT_BRACKET','long_function',4,'p_long_function','notal_parser.py',930),
  ('iskosong_function -> RW_ISKOSONG S_LEFT_BRACKET expression S_RIGHT_BRACKET','iskosong_function',4,'p_iskosong_function','notal_parser.py',935),
  ('converter_function_call -> integer_to_real','converter_function_call',1,'p_converter_function_call','notal_parser.py',940),
  ('converter_function_call -> real_to_integer','converter_function_call',1,'p_converter_function_call','notal_parser.py',941),
  ('integer_to_real -> RW_INTEGERTOREAL S_LEFT_BRACKET expression S_RIGHT_BRACKET','integer_to_real',4,'p_integer_to_real','notal_parser.py',946),
  ('real_to_integer -> RW_REALTOINTEGER S_LEFT_BRACKET expression S_RIGHT_BRACKET','real_to_integer',4,'p_real_to_integer','notal_parser.py',951),
  ('empty -> <empty>','empty',0,'p_empty','notal_parser.py',961),
  ('identifier -> IDENTIFIER','identifier',1,'p_identifier','notal_parser.py',966),
]
