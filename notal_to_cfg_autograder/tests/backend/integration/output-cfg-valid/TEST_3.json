{
   "nodes":[
      {
         "label":1,
         "statements":[
            "input(a,b,c)"
         ]
      },
      {
         "label":2,
         "statements":[
            "max_3 <- find_max_3(a,b,c)"
         ]
      },
      {
         "label":3,
         "statements":[
            "start: function find_max_3(a,b,c: integer) -> integer"
         ]
      },
      {
         "label":5,
         "statements":[
            "DEPEND ON (a,b,c)"
         ]
      },
      {
         "label":6,
         "statements":[
            "a > b > c"
         ]
      },
      {
         "label":7,
         "statements":[
            "max_3 <- a"
         ]
      },
      {
         "label":18,
         "statements":[
            "->max_3"
         ]
      },
      {
         "label":4,
         "statements":[
            "end: function find_max_3(a,b,c: integer) -> integer"
         ]
      },
      {
         "label":8,
         "statements":[
            "a > c > b"
         ]
      },
      {
         "label":9,
         "statements":[
            "max_3 <- a"
         ]
      },
      {
         "label":10,
         "statements":[
            "b > c > a"
         ]
      },
      {
         "label":11,
         "statements":[
            "max_3 <- b"
         ]
      },
      {
         "label":12,
         "statements":[
            "b > a > c"
         ]
      },
      {
         "label":13,
         "statements":[
            "max_3 <- b"
         ]
      },
      {
         "label":14,
         "statements":[
            "c > a > b"
         ]
      },
      {
         "label":15,
         "statements":[
            "max_3 <- c"
         ]
      },
      {
         "label":16,
         "statements":[
            "c > b > a"
         ]
      },
      {
         "label":17,
         "statements":[
            "max_3 <- c"
         ]
      },
      {
         "label":19,
         "statements":[
            "output(max_3)"
         ]
      },
      {
         "label":20,
         "statements":[
            "start: main"
         ]
      },
      {
         "label":21,
         "statements":[
            "end: main"
         ]
      }
   ],
   "edges":[
      {
         "start_node_label":1,
         "end_node_label":2
      },
      {
         "start_node_label":2,
         "end_node_label":3
      },
      {
         "start_node_label":2,
         "end_node_label":19
      },
      {
         "start_node_label":3,
         "end_node_label":5
      },
      {
         "start_node_label":5,
         "end_node_label":6
      },
      {
         "start_node_label":5,
         "end_node_label":8
      },
      {
         "start_node_label":5,
         "end_node_label":10
      },
      {
         "start_node_label":5,
         "end_node_label":12
      },
      {
         "start_node_label":5,
         "end_node_label":14
      },
      {
         "start_node_label":5,
         "end_node_label":16
      },
      {
         "start_node_label":6,
         "end_node_label":7
      },
      {
         "start_node_label":7,
         "end_node_label":18
      },
      {
         "start_node_label":18,
         "end_node_label":4
      },
      {
         "start_node_label":4,
         "end_node_label":2
      },
      {
         "start_node_label":8,
         "end_node_label":9
      },
      {
         "start_node_label":9,
         "end_node_label":18
      },
      {
         "start_node_label":10,
         "end_node_label":11
      },
      {
         "start_node_label":11,
         "end_node_label":18
      },
      {
         "start_node_label":12,
         "end_node_label":13
      },
      {
         "start_node_label":13,
         "end_node_label":18
      },
      {
         "start_node_label":14,
         "end_node_label":15
      },
      {
         "start_node_label":15,
         "end_node_label":18
      },
      {
         "start_node_label":16,
         "end_node_label":17
      },
      {
         "start_node_label":17,
         "end_node_label":18
      },
      {
         "start_node_label":19,
         "end_node_label":21
      },
      {
         "start_node_label":20,
         "end_node_label":1
      }
   ]
}